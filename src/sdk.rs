/* automatically generated by rust-bindgen 0.59.2 */

pub const NDILIB_LIBRARY_NAME: &[u8; 13usize] = b"libndi.dylib\0";
pub const NDILIB_REDIST_FOLDER: &[u8; 19usize] = b"NDI_RUNTIME_DIR_V5\0";
pub const NDILIB_REDIST_URL: &[u8; 31usize] = b"http://new.tk/NDIRedistV5Apple\0";
pub const NDILIB_CPP_DEFAULT_CONSTRUCTORS: u32 = 0;
pub const true_: u32 = 1;
pub const false_: u32 = 0;
pub const __bool_true_false_are_defined: u32 = 1;
pub const __WORDSIZE: u32 = 64;
pub const __DARWIN_ONLY_64_BIT_INO_T: u32 = 0;
pub const __DARWIN_ONLY_UNIX_CONFORMANCE: u32 = 1;
pub const __DARWIN_ONLY_VERS_1050: u32 = 0;
pub const __DARWIN_UNIX03: u32 = 1;
pub const __DARWIN_64_BIT_INO_T: u32 = 1;
pub const __DARWIN_VERS_1050: u32 = 1;
pub const __DARWIN_NON_CANCELABLE: u32 = 0;
pub const __DARWIN_SUF_64_BIT_INO_T: &[u8; 9usize] = b"$INODE64\0";
pub const __DARWIN_SUF_1050: &[u8; 6usize] = b"$1050\0";
pub const __DARWIN_SUF_EXTSN: &[u8; 14usize] = b"$DARWIN_EXTSN\0";
pub const __DARWIN_C_ANSI: u32 = 4096;
pub const __DARWIN_C_FULL: u32 = 900000;
pub const __DARWIN_C_LEVEL: u32 = 900000;
pub const __STDC_WANT_LIB_EXT1__: u32 = 1;
pub const __DARWIN_NO_LONG_LONG: u32 = 0;
pub const _DARWIN_FEATURE_64_BIT_INODE: u32 = 1;
pub const _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE: u32 = 1;
pub const _DARWIN_FEATURE_UNIX_CONFORMANCE: u32 = 3;
pub const __has_ptrcheck: u32 = 0;
pub const __PTHREAD_SIZE__: u32 = 8176;
pub const __PTHREAD_ATTR_SIZE__: u32 = 56;
pub const __PTHREAD_MUTEXATTR_SIZE__: u32 = 8;
pub const __PTHREAD_MUTEX_SIZE__: u32 = 56;
pub const __PTHREAD_CONDATTR_SIZE__: u32 = 8;
pub const __PTHREAD_COND_SIZE__: u32 = 40;
pub const __PTHREAD_ONCE_SIZE__: u32 = 8;
pub const __PTHREAD_RWLOCK_SIZE__: u32 = 192;
pub const __PTHREAD_RWLOCKATTR_SIZE__: u32 = 16;
pub const INT8_MAX: u32 = 127;
pub const INT16_MAX: u32 = 32767;
pub const INT32_MAX: u32 = 2147483647;
pub const INT64_MAX: u64 = 9223372036854775807;
pub const INT8_MIN: i32 = -128;
pub const INT16_MIN: i32 = -32768;
pub const INT32_MIN: i32 = -2147483648;
pub const INT64_MIN: i64 = -9223372036854775808;
pub const UINT8_MAX: u32 = 255;
pub const UINT16_MAX: u32 = 65535;
pub const UINT32_MAX: u32 = 4294967295;
pub const UINT64_MAX: i32 = -1;
pub const INT_LEAST8_MIN: i32 = -128;
pub const INT_LEAST16_MIN: i32 = -32768;
pub const INT_LEAST32_MIN: i32 = -2147483648;
pub const INT_LEAST64_MIN: i64 = -9223372036854775808;
pub const INT_LEAST8_MAX: u32 = 127;
pub const INT_LEAST16_MAX: u32 = 32767;
pub const INT_LEAST32_MAX: u32 = 2147483647;
pub const INT_LEAST64_MAX: u64 = 9223372036854775807;
pub const UINT_LEAST8_MAX: u32 = 255;
pub const UINT_LEAST16_MAX: u32 = 65535;
pub const UINT_LEAST32_MAX: u32 = 4294967295;
pub const UINT_LEAST64_MAX: i32 = -1;
pub const INT_FAST8_MIN: i32 = -128;
pub const INT_FAST16_MIN: i32 = -32768;
pub const INT_FAST32_MIN: i32 = -2147483648;
pub const INT_FAST64_MIN: i64 = -9223372036854775808;
pub const INT_FAST8_MAX: u32 = 127;
pub const INT_FAST16_MAX: u32 = 32767;
pub const INT_FAST32_MAX: u32 = 2147483647;
pub const INT_FAST64_MAX: u64 = 9223372036854775807;
pub const UINT_FAST8_MAX: u32 = 255;
pub const UINT_FAST16_MAX: u32 = 65535;
pub const UINT_FAST32_MAX: u32 = 4294967295;
pub const UINT_FAST64_MAX: i32 = -1;
pub const INTPTR_MAX: u64 = 9223372036854775807;
pub const INTPTR_MIN: i64 = -9223372036854775808;
pub const UINTPTR_MAX: i32 = -1;
pub const SIZE_MAX: i32 = -1;
pub const RSIZE_MAX: i32 = -1;
pub const WINT_MIN: i32 = -2147483648;
pub const WINT_MAX: u32 = 2147483647;
pub const SIG_ATOMIC_MIN: i32 = -2147483648;
pub const SIG_ATOMIC_MAX: u32 = 2147483647;
pub type int_least8_t = i8;
pub type int_least16_t = i16;
pub type int_least32_t = i32;
pub type int_least64_t = i64;
pub type uint_least8_t = u8;
pub type uint_least16_t = u16;
pub type uint_least32_t = u32;
pub type uint_least64_t = u64;
pub type int_fast8_t = i8;
pub type int_fast16_t = i16;
pub type int_fast32_t = i32;
pub type int_fast64_t = i64;
pub type uint_fast8_t = u8;
pub type uint_fast16_t = u16;
pub type uint_fast32_t = u32;
pub type uint_fast64_t = u64;
pub type __int8_t = ::std::os::raw::c_schar;
pub type __uint8_t = ::std::os::raw::c_uchar;
pub type __int16_t = ::std::os::raw::c_short;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __int64_t = ::std::os::raw::c_longlong;
pub type __uint64_t = ::std::os::raw::c_ulonglong;
pub type __darwin_intptr_t = ::std::os::raw::c_long;
pub type __darwin_natural_t = ::std::os::raw::c_uint;
pub type __darwin_ct_rune_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Copy, Clone)]
pub union __mbstate_t {
    pub __mbstate8: [::std::os::raw::c_char; 128usize],
    pub _mbstateL: ::std::os::raw::c_longlong,
}
#[test]
fn bindgen_test_layout___mbstate_t() {
    assert_eq!(
        ::std::mem::size_of::<__mbstate_t>(),
        128usize,
        concat!("Size of: ", stringify!(__mbstate_t))
    );
    assert_eq!(
        ::std::mem::align_of::<__mbstate_t>(),
        8usize,
        concat!("Alignment of ", stringify!(__mbstate_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<__mbstate_t>())).__mbstate8 as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__mbstate_t),
            "::",
            stringify!(__mbstate8)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<__mbstate_t>()))._mbstateL as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__mbstate_t),
            "::",
            stringify!(_mbstateL)
        )
    );
}
pub type __darwin_mbstate_t = __mbstate_t;
pub type __darwin_ptrdiff_t = ::std::os::raw::c_long;
pub type __darwin_size_t = ::std::os::raw::c_ulong;
pub type __darwin_va_list = __builtin_va_list;
pub type __darwin_wchar_t = ::std::os::raw::c_int;
pub type __darwin_rune_t = __darwin_wchar_t;
pub type __darwin_wint_t = ::std::os::raw::c_int;
pub type __darwin_clock_t = ::std::os::raw::c_ulong;
pub type __darwin_socklen_t = __uint32_t;
pub type __darwin_ssize_t = ::std::os::raw::c_long;
pub type __darwin_time_t = ::std::os::raw::c_long;
pub type __darwin_blkcnt_t = __int64_t;
pub type __darwin_blksize_t = __int32_t;
pub type __darwin_dev_t = __int32_t;
pub type __darwin_fsblkcnt_t = ::std::os::raw::c_uint;
pub type __darwin_fsfilcnt_t = ::std::os::raw::c_uint;
pub type __darwin_gid_t = __uint32_t;
pub type __darwin_id_t = __uint32_t;
pub type __darwin_ino64_t = __uint64_t;
pub type __darwin_ino_t = __darwin_ino64_t;
pub type __darwin_mach_port_name_t = __darwin_natural_t;
pub type __darwin_mach_port_t = __darwin_mach_port_name_t;
pub type __darwin_mode_t = __uint16_t;
pub type __darwin_off_t = __int64_t;
pub type __darwin_pid_t = __int32_t;
pub type __darwin_sigset_t = __uint32_t;
pub type __darwin_suseconds_t = __int32_t;
pub type __darwin_uid_t = __uint32_t;
pub type __darwin_useconds_t = __uint32_t;
pub type __darwin_uuid_t = [::std::os::raw::c_uchar; 16usize];
pub type __darwin_uuid_string_t = [::std::os::raw::c_char; 37usize];
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __darwin_pthread_handler_rec {
    pub __routine: ::std::option::Option<unsafe extern "C" fn(arg1: *mut ::std::os::raw::c_void)>,
    pub __arg: *mut ::std::os::raw::c_void,
    pub __next: *mut __darwin_pthread_handler_rec,
}
#[test]
fn bindgen_test_layout___darwin_pthread_handler_rec() {
    assert_eq!(
        ::std::mem::size_of::<__darwin_pthread_handler_rec>(),
        24usize,
        concat!("Size of: ", stringify!(__darwin_pthread_handler_rec))
    );
    assert_eq!(
        ::std::mem::align_of::<__darwin_pthread_handler_rec>(),
        8usize,
        concat!("Alignment of ", stringify!(__darwin_pthread_handler_rec))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<__darwin_pthread_handler_rec>())).__routine as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__darwin_pthread_handler_rec),
            "::",
            stringify!(__routine)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<__darwin_pthread_handler_rec>())).__arg as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(__darwin_pthread_handler_rec),
            "::",
            stringify!(__arg)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<__darwin_pthread_handler_rec>())).__next as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(__darwin_pthread_handler_rec),
            "::",
            stringify!(__next)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_attr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 56usize],
}
#[test]
fn bindgen_test_layout__opaque_pthread_attr_t() {
    assert_eq!(
        ::std::mem::size_of::<_opaque_pthread_attr_t>(),
        64usize,
        concat!("Size of: ", stringify!(_opaque_pthread_attr_t))
    );
    assert_eq!(
        ::std::mem::align_of::<_opaque_pthread_attr_t>(),
        8usize,
        concat!("Alignment of ", stringify!(_opaque_pthread_attr_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_opaque_pthread_attr_t>())).__sig as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_opaque_pthread_attr_t),
            "::",
            stringify!(__sig)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_opaque_pthread_attr_t>())).__opaque as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_opaque_pthread_attr_t),
            "::",
            stringify!(__opaque)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_cond_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 40usize],
}
#[test]
fn bindgen_test_layout__opaque_pthread_cond_t() {
    assert_eq!(
        ::std::mem::size_of::<_opaque_pthread_cond_t>(),
        48usize,
        concat!("Size of: ", stringify!(_opaque_pthread_cond_t))
    );
    assert_eq!(
        ::std::mem::align_of::<_opaque_pthread_cond_t>(),
        8usize,
        concat!("Alignment of ", stringify!(_opaque_pthread_cond_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_opaque_pthread_cond_t>())).__sig as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_opaque_pthread_cond_t),
            "::",
            stringify!(__sig)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_opaque_pthread_cond_t>())).__opaque as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_opaque_pthread_cond_t),
            "::",
            stringify!(__opaque)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_condattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
#[test]
fn bindgen_test_layout__opaque_pthread_condattr_t() {
    assert_eq!(
        ::std::mem::size_of::<_opaque_pthread_condattr_t>(),
        16usize,
        concat!("Size of: ", stringify!(_opaque_pthread_condattr_t))
    );
    assert_eq!(
        ::std::mem::align_of::<_opaque_pthread_condattr_t>(),
        8usize,
        concat!("Alignment of ", stringify!(_opaque_pthread_condattr_t))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<_opaque_pthread_condattr_t>())).__sig as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_opaque_pthread_condattr_t),
            "::",
            stringify!(__sig)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<_opaque_pthread_condattr_t>())).__opaque as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_opaque_pthread_condattr_t),
            "::",
            stringify!(__opaque)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_mutex_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 56usize],
}
#[test]
fn bindgen_test_layout__opaque_pthread_mutex_t() {
    assert_eq!(
        ::std::mem::size_of::<_opaque_pthread_mutex_t>(),
        64usize,
        concat!("Size of: ", stringify!(_opaque_pthread_mutex_t))
    );
    assert_eq!(
        ::std::mem::align_of::<_opaque_pthread_mutex_t>(),
        8usize,
        concat!("Alignment of ", stringify!(_opaque_pthread_mutex_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_opaque_pthread_mutex_t>())).__sig as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_opaque_pthread_mutex_t),
            "::",
            stringify!(__sig)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<_opaque_pthread_mutex_t>())).__opaque as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_opaque_pthread_mutex_t),
            "::",
            stringify!(__opaque)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_mutexattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
#[test]
fn bindgen_test_layout__opaque_pthread_mutexattr_t() {
    assert_eq!(
        ::std::mem::size_of::<_opaque_pthread_mutexattr_t>(),
        16usize,
        concat!("Size of: ", stringify!(_opaque_pthread_mutexattr_t))
    );
    assert_eq!(
        ::std::mem::align_of::<_opaque_pthread_mutexattr_t>(),
        8usize,
        concat!("Alignment of ", stringify!(_opaque_pthread_mutexattr_t))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<_opaque_pthread_mutexattr_t>())).__sig as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_opaque_pthread_mutexattr_t),
            "::",
            stringify!(__sig)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<_opaque_pthread_mutexattr_t>())).__opaque as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_opaque_pthread_mutexattr_t),
            "::",
            stringify!(__opaque)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_once_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 8usize],
}
#[test]
fn bindgen_test_layout__opaque_pthread_once_t() {
    assert_eq!(
        ::std::mem::size_of::<_opaque_pthread_once_t>(),
        16usize,
        concat!("Size of: ", stringify!(_opaque_pthread_once_t))
    );
    assert_eq!(
        ::std::mem::align_of::<_opaque_pthread_once_t>(),
        8usize,
        concat!("Alignment of ", stringify!(_opaque_pthread_once_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_opaque_pthread_once_t>())).__sig as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_opaque_pthread_once_t),
            "::",
            stringify!(__sig)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_opaque_pthread_once_t>())).__opaque as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_opaque_pthread_once_t),
            "::",
            stringify!(__opaque)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_rwlock_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 192usize],
}
#[test]
fn bindgen_test_layout__opaque_pthread_rwlock_t() {
    assert_eq!(
        ::std::mem::size_of::<_opaque_pthread_rwlock_t>(),
        200usize,
        concat!("Size of: ", stringify!(_opaque_pthread_rwlock_t))
    );
    assert_eq!(
        ::std::mem::align_of::<_opaque_pthread_rwlock_t>(),
        8usize,
        concat!("Alignment of ", stringify!(_opaque_pthread_rwlock_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_opaque_pthread_rwlock_t>())).__sig as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_opaque_pthread_rwlock_t),
            "::",
            stringify!(__sig)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<_opaque_pthread_rwlock_t>())).__opaque as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_opaque_pthread_rwlock_t),
            "::",
            stringify!(__opaque)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_rwlockattr_t {
    pub __sig: ::std::os::raw::c_long,
    pub __opaque: [::std::os::raw::c_char; 16usize],
}
#[test]
fn bindgen_test_layout__opaque_pthread_rwlockattr_t() {
    assert_eq!(
        ::std::mem::size_of::<_opaque_pthread_rwlockattr_t>(),
        24usize,
        concat!("Size of: ", stringify!(_opaque_pthread_rwlockattr_t))
    );
    assert_eq!(
        ::std::mem::align_of::<_opaque_pthread_rwlockattr_t>(),
        8usize,
        concat!("Alignment of ", stringify!(_opaque_pthread_rwlockattr_t))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<_opaque_pthread_rwlockattr_t>())).__sig as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_opaque_pthread_rwlockattr_t),
            "::",
            stringify!(__sig)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<_opaque_pthread_rwlockattr_t>())).__opaque as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_opaque_pthread_rwlockattr_t),
            "::",
            stringify!(__opaque)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct _opaque_pthread_t {
    pub __sig: ::std::os::raw::c_long,
    pub __cleanup_stack: *mut __darwin_pthread_handler_rec,
    pub __opaque: [::std::os::raw::c_char; 8176usize],
}
#[test]
fn bindgen_test_layout__opaque_pthread_t() {
    assert_eq!(
        ::std::mem::size_of::<_opaque_pthread_t>(),
        8192usize,
        concat!("Size of: ", stringify!(_opaque_pthread_t))
    );
    assert_eq!(
        ::std::mem::align_of::<_opaque_pthread_t>(),
        8usize,
        concat!("Alignment of ", stringify!(_opaque_pthread_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_opaque_pthread_t>())).__sig as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(_opaque_pthread_t),
            "::",
            stringify!(__sig)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<_opaque_pthread_t>())).__cleanup_stack as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(_opaque_pthread_t),
            "::",
            stringify!(__cleanup_stack)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<_opaque_pthread_t>())).__opaque as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(_opaque_pthread_t),
            "::",
            stringify!(__opaque)
        )
    );
}
pub type __darwin_pthread_attr_t = _opaque_pthread_attr_t;
pub type __darwin_pthread_cond_t = _opaque_pthread_cond_t;
pub type __darwin_pthread_condattr_t = _opaque_pthread_condattr_t;
pub type __darwin_pthread_key_t = ::std::os::raw::c_ulong;
pub type __darwin_pthread_mutex_t = _opaque_pthread_mutex_t;
pub type __darwin_pthread_mutexattr_t = _opaque_pthread_mutexattr_t;
pub type __darwin_pthread_once_t = _opaque_pthread_once_t;
pub type __darwin_pthread_rwlock_t = _opaque_pthread_rwlock_t;
pub type __darwin_pthread_rwlockattr_t = _opaque_pthread_rwlockattr_t;
pub type __darwin_pthread_t = *mut _opaque_pthread_t;
pub type u_int8_t = ::std::os::raw::c_uchar;
pub type u_int16_t = ::std::os::raw::c_ushort;
pub type u_int32_t = ::std::os::raw::c_uint;
pub type u_int64_t = ::std::os::raw::c_ulonglong;
pub type register_t = i64;
pub type user_addr_t = u_int64_t;
pub type user_size_t = u_int64_t;
pub type user_ssize_t = i64;
pub type user_long_t = i64;
pub type user_ulong_t = u_int64_t;
pub type user_time_t = i64;
pub type user_off_t = i64;
pub type syscall_arg_t = u_int64_t;
pub type intmax_t = ::std::os::raw::c_long;
pub type uintmax_t = ::std::os::raw::c_ulong;
pub const INFINITE: u32 = 4294967295;
pub const NDIlib_frame_type_e_NDIlib_frame_type_none: NDIlib_frame_type_e = 0;
pub const NDIlib_frame_type_e_NDIlib_frame_type_video: NDIlib_frame_type_e = 1;
pub const NDIlib_frame_type_e_NDIlib_frame_type_audio: NDIlib_frame_type_e = 2;
pub const NDIlib_frame_type_e_NDIlib_frame_type_metadata: NDIlib_frame_type_e = 3;
pub const NDIlib_frame_type_e_NDIlib_frame_type_error: NDIlib_frame_type_e = 4;
pub const NDIlib_frame_type_e_NDIlib_frame_type_status_change: NDIlib_frame_type_e = 100;
pub const NDIlib_frame_type_e_NDIlib_frame_type_max: NDIlib_frame_type_e = 2147483647;
pub type NDIlib_frame_type_e = ::std::os::raw::c_uint;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_video_type_UYVY: NDIlib_FourCC_video_type_e =
    1498831189;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_type_UYVY: NDIlib_FourCC_video_type_e =
    1498831189;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_video_type_UYVA: NDIlib_FourCC_video_type_e =
    1096178005;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_type_UYVA: NDIlib_FourCC_video_type_e =
    1096178005;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_video_type_P216: NDIlib_FourCC_video_type_e =
    909193808;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_type_P216: NDIlib_FourCC_video_type_e =
    909193808;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_video_type_PA16: NDIlib_FourCC_video_type_e =
    909197648;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_type_PA16: NDIlib_FourCC_video_type_e =
    909197648;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_video_type_YV12: NDIlib_FourCC_video_type_e =
    842094169;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_type_YV12: NDIlib_FourCC_video_type_e =
    842094169;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_video_type_I420: NDIlib_FourCC_video_type_e =
    808596553;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_type_I420: NDIlib_FourCC_video_type_e =
    808596553;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_video_type_NV12: NDIlib_FourCC_video_type_e =
    842094158;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_type_NV12: NDIlib_FourCC_video_type_e =
    842094158;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_video_type_BGRA: NDIlib_FourCC_video_type_e =
    1095911234;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_type_BGRA: NDIlib_FourCC_video_type_e =
    1095911234;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_video_type_BGRX: NDIlib_FourCC_video_type_e =
    1481787202;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_type_BGRX: NDIlib_FourCC_video_type_e =
    1481787202;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_video_type_RGBA: NDIlib_FourCC_video_type_e =
    1094862674;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_type_RGBA: NDIlib_FourCC_video_type_e =
    1094862674;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_video_type_RGBX: NDIlib_FourCC_video_type_e =
    1480738642;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_type_RGBX: NDIlib_FourCC_video_type_e =
    1480738642;
pub const NDIlib_FourCC_video_type_e_NDIlib_FourCC_video_type_max: NDIlib_FourCC_video_type_e =
    2147483647;
pub type NDIlib_FourCC_video_type_e = ::std::os::raw::c_uint;
pub use self::NDIlib_FourCC_video_type_e as NDIlib_FourCC_type_e;
pub const NDIlib_FourCC_audio_type_e_NDIlib_FourCC_audio_type_FLTP: NDIlib_FourCC_audio_type_e =
    1884572742;
pub const NDIlib_FourCC_audio_type_e_NDIlib_FourCC_type_FLTP: NDIlib_FourCC_audio_type_e =
    1884572742;
pub const NDIlib_FourCC_audio_type_e_NDIlib_FourCC_audio_type_max: NDIlib_FourCC_audio_type_e =
    2147483647;
pub type NDIlib_FourCC_audio_type_e = ::std::os::raw::c_uint;
pub const NDIlib_frame_format_type_e_NDIlib_frame_format_type_progressive:
    NDIlib_frame_format_type_e = 1;
pub const NDIlib_frame_format_type_e_NDIlib_frame_format_type_interleaved:
    NDIlib_frame_format_type_e = 0;
pub const NDIlib_frame_format_type_e_NDIlib_frame_format_type_field_0: NDIlib_frame_format_type_e =
    2;
pub const NDIlib_frame_format_type_e_NDIlib_frame_format_type_field_1: NDIlib_frame_format_type_e =
    3;
pub const NDIlib_frame_format_type_e_NDIlib_frame_format_type_max: NDIlib_frame_format_type_e =
    2147483647;
pub type NDIlib_frame_format_type_e = ::std::os::raw::c_uint;
pub const NDIlib_send_timecode_synthesize: i64 = 9223372036854775807;
pub const NDIlib_recv_timestamp_undefined: i64 = 9223372036854775807;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct NDIlib_source_t {
    pub p_ndi_name: *const ::std::os::raw::c_char,
    pub __bindgen_anon_1: NDIlib_source_t__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_source_t__bindgen_ty_1 {
    pub p_url_address: *const ::std::os::raw::c_char,
    pub p_ip_address: *const ::std::os::raw::c_char,
}
#[test]
fn bindgen_test_layout_NDIlib_source_t__bindgen_ty_1() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_source_t__bindgen_ty_1>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_source_t__bindgen_ty_1))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_source_t__bindgen_ty_1>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_source_t__bindgen_ty_1))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_source_t__bindgen_ty_1>())).p_url_address as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_source_t__bindgen_ty_1),
            "::",
            stringify!(p_url_address)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_source_t__bindgen_ty_1>())).p_ip_address as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_source_t__bindgen_ty_1),
            "::",
            stringify!(p_ip_address)
        )
    );
}
#[test]
fn bindgen_test_layout_NDIlib_source_t() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_source_t>(),
        16usize,
        concat!("Size of: ", stringify!(NDIlib_source_t))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_source_t>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_source_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_source_t>())).p_ndi_name as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_source_t),
            "::",
            stringify!(p_ndi_name)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct NDIlib_video_frame_v2_t {
    pub xres: ::std::os::raw::c_int,
    pub yres: ::std::os::raw::c_int,
    pub FourCC: NDIlib_FourCC_video_type_e,
    pub frame_rate_N: ::std::os::raw::c_int,
    pub frame_rate_D: ::std::os::raw::c_int,
    pub picture_aspect_ratio: f32,
    pub frame_format_type: NDIlib_frame_format_type_e,
    pub timecode: i64,
    pub p_data: *mut u8,
    pub __bindgen_anon_1: NDIlib_video_frame_v2_t__bindgen_ty_1,
    pub p_metadata: *const ::std::os::raw::c_char,
    pub timestamp: i64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_video_frame_v2_t__bindgen_ty_1 {
    pub line_stride_in_bytes: ::std::os::raw::c_int,
    pub data_size_in_bytes: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_NDIlib_video_frame_v2_t__bindgen_ty_1() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_video_frame_v2_t__bindgen_ty_1>(),
        4usize,
        concat!(
            "Size of: ",
            stringify!(NDIlib_video_frame_v2_t__bindgen_ty_1)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_video_frame_v2_t__bindgen_ty_1>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(NDIlib_video_frame_v2_t__bindgen_ty_1)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_video_frame_v2_t__bindgen_ty_1>())).line_stride_in_bytes
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_v2_t__bindgen_ty_1),
            "::",
            stringify!(line_stride_in_bytes)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_video_frame_v2_t__bindgen_ty_1>())).data_size_in_bytes
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_v2_t__bindgen_ty_1),
            "::",
            stringify!(data_size_in_bytes)
        )
    );
}
#[test]
fn bindgen_test_layout_NDIlib_video_frame_v2_t() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_video_frame_v2_t>(),
        72usize,
        concat!("Size of: ", stringify!(NDIlib_video_frame_v2_t))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_video_frame_v2_t>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_video_frame_v2_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_video_frame_v2_t>())).xres as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_v2_t),
            "::",
            stringify!(xres)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_video_frame_v2_t>())).yres as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_v2_t),
            "::",
            stringify!(yres)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_video_frame_v2_t>())).FourCC as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_v2_t),
            "::",
            stringify!(FourCC)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_video_frame_v2_t>())).frame_rate_N as *const _ as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_v2_t),
            "::",
            stringify!(frame_rate_N)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_video_frame_v2_t>())).frame_rate_D as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_v2_t),
            "::",
            stringify!(frame_rate_D)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_video_frame_v2_t>())).picture_aspect_ratio as *const _
                as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_v2_t),
            "::",
            stringify!(picture_aspect_ratio)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_video_frame_v2_t>())).frame_format_type as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_v2_t),
            "::",
            stringify!(frame_format_type)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_video_frame_v2_t>())).timecode as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_v2_t),
            "::",
            stringify!(timecode)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_video_frame_v2_t>())).p_data as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_v2_t),
            "::",
            stringify!(p_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_video_frame_v2_t>())).p_metadata as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_v2_t),
            "::",
            stringify!(p_metadata)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_video_frame_v2_t>())).timestamp as *const _ as usize
        },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_v2_t),
            "::",
            stringify!(timestamp)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct NDIlib_audio_frame_v2_t {
    pub sample_rate: ::std::os::raw::c_int,
    pub no_channels: ::std::os::raw::c_int,
    pub no_samples: ::std::os::raw::c_int,
    pub timecode: i64,
    pub p_data: *mut f32,
    pub channel_stride_in_bytes: ::std::os::raw::c_int,
    pub p_metadata: *const ::std::os::raw::c_char,
    pub timestamp: i64,
}
#[test]
fn bindgen_test_layout_NDIlib_audio_frame_v2_t() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_audio_frame_v2_t>(),
        56usize,
        concat!("Size of: ", stringify!(NDIlib_audio_frame_v2_t))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_audio_frame_v2_t>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_audio_frame_v2_t))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_v2_t>())).sample_rate as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_v2_t),
            "::",
            stringify!(sample_rate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_v2_t>())).no_channels as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_v2_t),
            "::",
            stringify!(no_channels)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_v2_t>())).no_samples as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_v2_t),
            "::",
            stringify!(no_samples)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_v2_t>())).timecode as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_v2_t),
            "::",
            stringify!(timecode)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_audio_frame_v2_t>())).p_data as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_v2_t),
            "::",
            stringify!(p_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_v2_t>())).channel_stride_in_bytes as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_v2_t),
            "::",
            stringify!(channel_stride_in_bytes)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_v2_t>())).p_metadata as *const _ as usize
        },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_v2_t),
            "::",
            stringify!(p_metadata)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_v2_t>())).timestamp as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_v2_t),
            "::",
            stringify!(timestamp)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct NDIlib_audio_frame_v3_t {
    pub sample_rate: ::std::os::raw::c_int,
    pub no_channels: ::std::os::raw::c_int,
    pub no_samples: ::std::os::raw::c_int,
    pub timecode: i64,
    pub FourCC: NDIlib_FourCC_audio_type_e,
    pub p_data: *mut u8,
    pub __bindgen_anon_1: NDIlib_audio_frame_v3_t__bindgen_ty_1,
    pub p_metadata: *const ::std::os::raw::c_char,
    pub timestamp: i64,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_audio_frame_v3_t__bindgen_ty_1 {
    pub channel_stride_in_bytes: ::std::os::raw::c_int,
    pub data_size_in_bytes: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_NDIlib_audio_frame_v3_t__bindgen_ty_1() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_audio_frame_v3_t__bindgen_ty_1>(),
        4usize,
        concat!(
            "Size of: ",
            stringify!(NDIlib_audio_frame_v3_t__bindgen_ty_1)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_audio_frame_v3_t__bindgen_ty_1>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(NDIlib_audio_frame_v3_t__bindgen_ty_1)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_v3_t__bindgen_ty_1>()))
                .channel_stride_in_bytes as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_v3_t__bindgen_ty_1),
            "::",
            stringify!(channel_stride_in_bytes)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_v3_t__bindgen_ty_1>())).data_size_in_bytes
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_v3_t__bindgen_ty_1),
            "::",
            stringify!(data_size_in_bytes)
        )
    );
}
#[test]
fn bindgen_test_layout_NDIlib_audio_frame_v3_t() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_audio_frame_v3_t>(),
        64usize,
        concat!("Size of: ", stringify!(NDIlib_audio_frame_v3_t))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_audio_frame_v3_t>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_audio_frame_v3_t))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_v3_t>())).sample_rate as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_v3_t),
            "::",
            stringify!(sample_rate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_v3_t>())).no_channels as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_v3_t),
            "::",
            stringify!(no_channels)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_v3_t>())).no_samples as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_v3_t),
            "::",
            stringify!(no_samples)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_v3_t>())).timecode as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_v3_t),
            "::",
            stringify!(timecode)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_audio_frame_v3_t>())).FourCC as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_v3_t),
            "::",
            stringify!(FourCC)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_audio_frame_v3_t>())).p_data as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_v3_t),
            "::",
            stringify!(p_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_v3_t>())).p_metadata as *const _ as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_v3_t),
            "::",
            stringify!(p_metadata)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_v3_t>())).timestamp as *const _ as usize
        },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_v3_t),
            "::",
            stringify!(timestamp)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct NDIlib_metadata_frame_t {
    pub length: ::std::os::raw::c_int,
    pub timecode: i64,
    pub p_data: *mut ::std::os::raw::c_char,
}
#[test]
fn bindgen_test_layout_NDIlib_metadata_frame_t() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_metadata_frame_t>(),
        24usize,
        concat!("Size of: ", stringify!(NDIlib_metadata_frame_t))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_metadata_frame_t>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_metadata_frame_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_metadata_frame_t>())).length as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_metadata_frame_t),
            "::",
            stringify!(length)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_metadata_frame_t>())).timecode as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_metadata_frame_t),
            "::",
            stringify!(timecode)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_metadata_frame_t>())).p_data as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_metadata_frame_t),
            "::",
            stringify!(p_data)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct NDIlib_tally_t {
    pub on_program: bool,
    pub on_preview: bool,
}
#[test]
fn bindgen_test_layout_NDIlib_tally_t() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_tally_t>(),
        2usize,
        concat!("Size of: ", stringify!(NDIlib_tally_t))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_tally_t>(),
        1usize,
        concat!("Alignment of ", stringify!(NDIlib_tally_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_tally_t>())).on_program as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_tally_t),
            "::",
            stringify!(on_program)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_tally_t>())).on_preview as *const _ as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_tally_t),
            "::",
            stringify!(on_preview)
        )
    );
}
pub type NDIlib_find_instance_t = *mut ::std::os::raw::c_void;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct NDIlib_find_create_t {
    pub show_local_sources: bool,
    pub p_groups: *const ::std::os::raw::c_char,
    pub p_extra_ips: *const ::std::os::raw::c_char,
}
#[test]
fn bindgen_test_layout_NDIlib_find_create_t() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_find_create_t>(),
        24usize,
        concat!("Size of: ", stringify!(NDIlib_find_create_t))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_find_create_t>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_find_create_t))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_find_create_t>())).show_local_sources as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_find_create_t),
            "::",
            stringify!(show_local_sources)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_find_create_t>())).p_groups as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_find_create_t),
            "::",
            stringify!(p_groups)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_find_create_t>())).p_extra_ips as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_find_create_t),
            "::",
            stringify!(p_extra_ips)
        )
    );
}
pub type NDIlib_recv_instance_t = *mut ::std::os::raw::c_void;
pub const NDIlib_recv_bandwidth_e_NDIlib_recv_bandwidth_metadata_only: NDIlib_recv_bandwidth_e =
    -10;
pub const NDIlib_recv_bandwidth_e_NDIlib_recv_bandwidth_audio_only: NDIlib_recv_bandwidth_e = 10;
pub const NDIlib_recv_bandwidth_e_NDIlib_recv_bandwidth_lowest: NDIlib_recv_bandwidth_e = 0;
pub const NDIlib_recv_bandwidth_e_NDIlib_recv_bandwidth_highest: NDIlib_recv_bandwidth_e = 100;
pub const NDIlib_recv_bandwidth_e_NDIlib_recv_bandwidth_max: NDIlib_recv_bandwidth_e = 2147483647;
pub type NDIlib_recv_bandwidth_e = ::std::os::raw::c_int;
pub const NDIlib_recv_color_format_e_NDIlib_recv_color_format_BGRX_BGRA:
    NDIlib_recv_color_format_e = 0;
pub const NDIlib_recv_color_format_e_NDIlib_recv_color_format_UYVY_BGRA:
    NDIlib_recv_color_format_e = 1;
pub const NDIlib_recv_color_format_e_NDIlib_recv_color_format_RGBX_RGBA:
    NDIlib_recv_color_format_e = 2;
pub const NDIlib_recv_color_format_e_NDIlib_recv_color_format_UYVY_RGBA:
    NDIlib_recv_color_format_e = 3;
pub const NDIlib_recv_color_format_e_NDIlib_recv_color_format_fastest: NDIlib_recv_color_format_e =
    100;
pub const NDIlib_recv_color_format_e_NDIlib_recv_color_format_best: NDIlib_recv_color_format_e =
    101;
pub const NDIlib_recv_color_format_e_NDIlib_recv_color_format_e_BGRX_BGRA:
    NDIlib_recv_color_format_e = 0;
pub const NDIlib_recv_color_format_e_NDIlib_recv_color_format_e_UYVY_BGRA:
    NDIlib_recv_color_format_e = 1;
pub const NDIlib_recv_color_format_e_NDIlib_recv_color_format_e_RGBX_RGBA:
    NDIlib_recv_color_format_e = 2;
pub const NDIlib_recv_color_format_e_NDIlib_recv_color_format_e_UYVY_RGBA:
    NDIlib_recv_color_format_e = 3;
pub const NDIlib_recv_color_format_e_NDIlib_recv_color_format_max: NDIlib_recv_color_format_e =
    2147483647;
pub type NDIlib_recv_color_format_e = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct NDIlib_recv_create_v3_t {
    pub source_to_connect_to: NDIlib_source_t,
    pub color_format: NDIlib_recv_color_format_e,
    pub bandwidth: NDIlib_recv_bandwidth_e,
    pub allow_video_fields: bool,
    pub p_ndi_recv_name: *const ::std::os::raw::c_char,
}
#[test]
fn bindgen_test_layout_NDIlib_recv_create_v3_t() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_recv_create_v3_t>(),
        40usize,
        concat!("Size of: ", stringify!(NDIlib_recv_create_v3_t))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_recv_create_v3_t>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_recv_create_v3_t))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_recv_create_v3_t>())).source_to_connect_to as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_recv_create_v3_t),
            "::",
            stringify!(source_to_connect_to)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_recv_create_v3_t>())).color_format as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_recv_create_v3_t),
            "::",
            stringify!(color_format)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_recv_create_v3_t>())).bandwidth as *const _ as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_recv_create_v3_t),
            "::",
            stringify!(bandwidth)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_recv_create_v3_t>())).allow_video_fields as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_recv_create_v3_t),
            "::",
            stringify!(allow_video_fields)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_recv_create_v3_t>())).p_ndi_recv_name as *const _ as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_recv_create_v3_t),
            "::",
            stringify!(p_ndi_recv_name)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct NDIlib_recv_performance_t {
    pub video_frames: i64,
    pub audio_frames: i64,
    pub metadata_frames: i64,
}
#[test]
fn bindgen_test_layout_NDIlib_recv_performance_t() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_recv_performance_t>(),
        24usize,
        concat!("Size of: ", stringify!(NDIlib_recv_performance_t))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_recv_performance_t>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_recv_performance_t))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_recv_performance_t>())).video_frames as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_recv_performance_t),
            "::",
            stringify!(video_frames)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_recv_performance_t>())).audio_frames as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_recv_performance_t),
            "::",
            stringify!(audio_frames)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_recv_performance_t>())).metadata_frames as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_recv_performance_t),
            "::",
            stringify!(metadata_frames)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct NDIlib_recv_queue_t {
    pub video_frames: ::std::os::raw::c_int,
    pub audio_frames: ::std::os::raw::c_int,
    pub metadata_frames: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_NDIlib_recv_queue_t() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_recv_queue_t>(),
        12usize,
        concat!("Size of: ", stringify!(NDIlib_recv_queue_t))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_recv_queue_t>(),
        4usize,
        concat!("Alignment of ", stringify!(NDIlib_recv_queue_t))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_recv_queue_t>())).video_frames as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_recv_queue_t),
            "::",
            stringify!(video_frames)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_recv_queue_t>())).audio_frames as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_recv_queue_t),
            "::",
            stringify!(audio_frames)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_recv_queue_t>())).metadata_frames as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_recv_queue_t),
            "::",
            stringify!(metadata_frames)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct NDIlib_recv_recording_time_t {
    pub no_frames: i64,
    pub start_time: i64,
    pub last_time: i64,
}
#[test]
fn bindgen_test_layout_NDIlib_recv_recording_time_t() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_recv_recording_time_t>(),
        24usize,
        concat!("Size of: ", stringify!(NDIlib_recv_recording_time_t))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_recv_recording_time_t>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_recv_recording_time_t))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_recv_recording_time_t>())).no_frames as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_recv_recording_time_t),
            "::",
            stringify!(no_frames)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_recv_recording_time_t>())).start_time as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_recv_recording_time_t),
            "::",
            stringify!(start_time)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_recv_recording_time_t>())).last_time as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_recv_recording_time_t),
            "::",
            stringify!(last_time)
        )
    );
}
pub type NDIlib_send_instance_t = *mut ::std::os::raw::c_void;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct NDIlib_send_create_t {
    pub p_ndi_name: *const ::std::os::raw::c_char,
    pub p_groups: *const ::std::os::raw::c_char,
    pub clock_video: bool,
    pub clock_audio: bool,
}
#[test]
fn bindgen_test_layout_NDIlib_send_create_t() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_send_create_t>(),
        24usize,
        concat!("Size of: ", stringify!(NDIlib_send_create_t))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_send_create_t>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_send_create_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_send_create_t>())).p_ndi_name as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_send_create_t),
            "::",
            stringify!(p_ndi_name)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_send_create_t>())).p_groups as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_send_create_t),
            "::",
            stringify!(p_groups)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_send_create_t>())).clock_video as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_send_create_t),
            "::",
            stringify!(clock_video)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_send_create_t>())).clock_audio as *const _ as usize
        },
        17usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_send_create_t),
            "::",
            stringify!(clock_audio)
        )
    );
}
pub type NDIlib_routing_instance_t = *mut ::std::os::raw::c_void;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct NDIlib_routing_create_t {
    pub p_ndi_name: *const ::std::os::raw::c_char,
    pub p_groups: *const ::std::os::raw::c_char,
}
#[test]
fn bindgen_test_layout_NDIlib_routing_create_t() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_routing_create_t>(),
        16usize,
        concat!("Size of: ", stringify!(NDIlib_routing_create_t))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_routing_create_t>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_routing_create_t))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_routing_create_t>())).p_ndi_name as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_routing_create_t),
            "::",
            stringify!(p_ndi_name)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_routing_create_t>())).p_groups as *const _ as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_routing_create_t),
            "::",
            stringify!(p_groups)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct NDIlib_audio_frame_interleaved_16s_t {
    pub sample_rate: ::std::os::raw::c_int,
    pub no_channels: ::std::os::raw::c_int,
    pub no_samples: ::std::os::raw::c_int,
    pub timecode: i64,
    pub reference_level: ::std::os::raw::c_int,
    pub p_data: *mut i16,
}
#[test]
fn bindgen_test_layout_NDIlib_audio_frame_interleaved_16s_t() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_audio_frame_interleaved_16s_t>(),
        40usize,
        concat!(
            "Size of: ",
            stringify!(NDIlib_audio_frame_interleaved_16s_t)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_audio_frame_interleaved_16s_t>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(NDIlib_audio_frame_interleaved_16s_t)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_interleaved_16s_t>())).sample_rate as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_interleaved_16s_t),
            "::",
            stringify!(sample_rate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_interleaved_16s_t>())).no_channels as *const _
                as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_interleaved_16s_t),
            "::",
            stringify!(no_channels)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_interleaved_16s_t>())).no_samples as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_interleaved_16s_t),
            "::",
            stringify!(no_samples)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_interleaved_16s_t>())).timecode as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_interleaved_16s_t),
            "::",
            stringify!(timecode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_interleaved_16s_t>())).reference_level
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_interleaved_16s_t),
            "::",
            stringify!(reference_level)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_interleaved_16s_t>())).p_data as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_interleaved_16s_t),
            "::",
            stringify!(p_data)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct NDIlib_audio_frame_interleaved_32s_t {
    pub sample_rate: ::std::os::raw::c_int,
    pub no_channels: ::std::os::raw::c_int,
    pub no_samples: ::std::os::raw::c_int,
    pub timecode: i64,
    pub reference_level: ::std::os::raw::c_int,
    pub p_data: *mut i32,
}
#[test]
fn bindgen_test_layout_NDIlib_audio_frame_interleaved_32s_t() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_audio_frame_interleaved_32s_t>(),
        40usize,
        concat!(
            "Size of: ",
            stringify!(NDIlib_audio_frame_interleaved_32s_t)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_audio_frame_interleaved_32s_t>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(NDIlib_audio_frame_interleaved_32s_t)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_interleaved_32s_t>())).sample_rate as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_interleaved_32s_t),
            "::",
            stringify!(sample_rate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_interleaved_32s_t>())).no_channels as *const _
                as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_interleaved_32s_t),
            "::",
            stringify!(no_channels)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_interleaved_32s_t>())).no_samples as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_interleaved_32s_t),
            "::",
            stringify!(no_samples)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_interleaved_32s_t>())).timecode as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_interleaved_32s_t),
            "::",
            stringify!(timecode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_interleaved_32s_t>())).reference_level
                as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_interleaved_32s_t),
            "::",
            stringify!(reference_level)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_interleaved_32s_t>())).p_data as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_interleaved_32s_t),
            "::",
            stringify!(p_data)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct NDIlib_audio_frame_interleaved_32f_t {
    pub sample_rate: ::std::os::raw::c_int,
    pub no_channels: ::std::os::raw::c_int,
    pub no_samples: ::std::os::raw::c_int,
    pub timecode: i64,
    pub p_data: *mut f32,
}
#[test]
fn bindgen_test_layout_NDIlib_audio_frame_interleaved_32f_t() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_audio_frame_interleaved_32f_t>(),
        32usize,
        concat!(
            "Size of: ",
            stringify!(NDIlib_audio_frame_interleaved_32f_t)
        )
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_audio_frame_interleaved_32f_t>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(NDIlib_audio_frame_interleaved_32f_t)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_interleaved_32f_t>())).sample_rate as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_interleaved_32f_t),
            "::",
            stringify!(sample_rate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_interleaved_32f_t>())).no_channels as *const _
                as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_interleaved_32f_t),
            "::",
            stringify!(no_channels)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_interleaved_32f_t>())).no_samples as *const _
                as usize
        },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_interleaved_32f_t),
            "::",
            stringify!(no_samples)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_interleaved_32f_t>())).timecode as *const _
                as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_interleaved_32f_t),
            "::",
            stringify!(timecode)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_interleaved_32f_t>())).p_data as *const _
                as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_interleaved_32f_t),
            "::",
            stringify!(p_data)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct NDIlib_video_frame_t {
    pub xres: ::std::os::raw::c_int,
    pub yres: ::std::os::raw::c_int,
    pub FourCC: NDIlib_FourCC_video_type_e,
    pub frame_rate_N: ::std::os::raw::c_int,
    pub frame_rate_D: ::std::os::raw::c_int,
    pub picture_aspect_ratio: f32,
    pub frame_format_type: NDIlib_frame_format_type_e,
    pub timecode: i64,
    pub p_data: *mut u8,
    pub line_stride_in_bytes: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_NDIlib_video_frame_t() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_video_frame_t>(),
        56usize,
        concat!("Size of: ", stringify!(NDIlib_video_frame_t))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_video_frame_t>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_video_frame_t))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_video_frame_t>())).xres as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_t),
            "::",
            stringify!(xres)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_video_frame_t>())).yres as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_t),
            "::",
            stringify!(yres)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_video_frame_t>())).FourCC as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_t),
            "::",
            stringify!(FourCC)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_video_frame_t>())).frame_rate_N as *const _ as usize
        },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_t),
            "::",
            stringify!(frame_rate_N)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_video_frame_t>())).frame_rate_D as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_t),
            "::",
            stringify!(frame_rate_D)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_video_frame_t>())).picture_aspect_ratio as *const _
                as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_t),
            "::",
            stringify!(picture_aspect_ratio)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_video_frame_t>())).frame_format_type as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_t),
            "::",
            stringify!(frame_format_type)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_video_frame_t>())).timecode as *const _ as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_t),
            "::",
            stringify!(timecode)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_video_frame_t>())).p_data as *const _ as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_t),
            "::",
            stringify!(p_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_video_frame_t>())).line_stride_in_bytes as *const _
                as usize
        },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_video_frame_t),
            "::",
            stringify!(line_stride_in_bytes)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct NDIlib_audio_frame_t {
    pub sample_rate: ::std::os::raw::c_int,
    pub no_channels: ::std::os::raw::c_int,
    pub no_samples: ::std::os::raw::c_int,
    pub timecode: i64,
    pub p_data: *mut f32,
    pub channel_stride_in_bytes: ::std::os::raw::c_int,
}
#[test]
fn bindgen_test_layout_NDIlib_audio_frame_t() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_audio_frame_t>(),
        40usize,
        concat!("Size of: ", stringify!(NDIlib_audio_frame_t))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_audio_frame_t>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_audio_frame_t))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_t>())).sample_rate as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_t),
            "::",
            stringify!(sample_rate)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_t>())).no_channels as *const _ as usize
        },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_t),
            "::",
            stringify!(no_channels)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_audio_frame_t>())).no_samples as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_t),
            "::",
            stringify!(no_samples)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_audio_frame_t>())).timecode as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_t),
            "::",
            stringify!(timecode)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_audio_frame_t>())).p_data as *const _ as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_t),
            "::",
            stringify!(p_data)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_audio_frame_t>())).channel_stride_in_bytes as *const _
                as usize
        },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_audio_frame_t),
            "::",
            stringify!(channel_stride_in_bytes)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct NDIlib_recv_create_t {
    pub source_to_connect_to: NDIlib_source_t,
    pub color_format: NDIlib_recv_color_format_e,
    pub bandwidth: NDIlib_recv_bandwidth_e,
    pub allow_video_fields: bool,
}
#[test]
fn bindgen_test_layout_NDIlib_recv_create_t() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_recv_create_t>(),
        32usize,
        concat!("Size of: ", stringify!(NDIlib_recv_create_t))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_recv_create_t>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_recv_create_t))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_recv_create_t>())).source_to_connect_to as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_recv_create_t),
            "::",
            stringify!(source_to_connect_to)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_recv_create_t>())).color_format as *const _ as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_recv_create_t),
            "::",
            stringify!(color_format)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_recv_create_t>())).bandwidth as *const _ as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_recv_create_t),
            "::",
            stringify!(bandwidth)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_recv_create_t>())).allow_video_fields as *const _ as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_recv_create_t),
            "::",
            stringify!(allow_video_fields)
        )
    );
}
pub type NDIlib_framesync_instance_t = *mut ::std::os::raw::c_void;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct NDIlib_v5 {
    pub __bindgen_anon_1: NDIlib_v5__bindgen_ty_1,
    pub __bindgen_anon_2: NDIlib_v5__bindgen_ty_2,
    pub __bindgen_anon_3: NDIlib_v5__bindgen_ty_3,
    pub __bindgen_anon_4: NDIlib_v5__bindgen_ty_4,
    pub __bindgen_anon_5: NDIlib_v5__bindgen_ty_5,
    pub __bindgen_anon_6: NDIlib_v5__bindgen_ty_6,
    pub __bindgen_anon_7: NDIlib_v5__bindgen_ty_7,
    pub __bindgen_anon_8: NDIlib_v5__bindgen_ty_8,
    pub __bindgen_anon_9: NDIlib_v5__bindgen_ty_9,
    pub __bindgen_anon_10: NDIlib_v5__bindgen_ty_10,
    pub __bindgen_anon_11: NDIlib_v5__bindgen_ty_11,
    pub __bindgen_anon_12: NDIlib_v5__bindgen_ty_12,
    pub __bindgen_anon_13: NDIlib_v5__bindgen_ty_13,
    pub __bindgen_anon_14: NDIlib_v5__bindgen_ty_14,
    pub __bindgen_anon_15: NDIlib_v5__bindgen_ty_15,
    pub __bindgen_anon_16: NDIlib_v5__bindgen_ty_16,
    pub __bindgen_anon_17: NDIlib_v5__bindgen_ty_17,
    pub __bindgen_anon_18: NDIlib_v5__bindgen_ty_18,
    pub __bindgen_anon_19: NDIlib_v5__bindgen_ty_19,
    pub __bindgen_anon_20: NDIlib_v5__bindgen_ty_20,
    pub __bindgen_anon_21: NDIlib_v5__bindgen_ty_21,
    pub __bindgen_anon_22: NDIlib_v5__bindgen_ty_22,
    pub __bindgen_anon_23: NDIlib_v5__bindgen_ty_23,
    pub __bindgen_anon_24: NDIlib_v5__bindgen_ty_24,
    pub __bindgen_anon_25: NDIlib_v5__bindgen_ty_25,
    pub __bindgen_anon_26: NDIlib_v5__bindgen_ty_26,
    pub __bindgen_anon_27: NDIlib_v5__bindgen_ty_27,
    pub __bindgen_anon_28: NDIlib_v5__bindgen_ty_28,
    pub __bindgen_anon_29: NDIlib_v5__bindgen_ty_29,
    pub __bindgen_anon_30: NDIlib_v5__bindgen_ty_30,
    pub __bindgen_anon_31: NDIlib_v5__bindgen_ty_31,
    pub __bindgen_anon_32: NDIlib_v5__bindgen_ty_32,
    pub __bindgen_anon_33: NDIlib_v5__bindgen_ty_33,
    pub __bindgen_anon_34: NDIlib_v5__bindgen_ty_34,
    pub __bindgen_anon_35: NDIlib_v5__bindgen_ty_35,
    pub __bindgen_anon_36: NDIlib_v5__bindgen_ty_36,
    pub __bindgen_anon_37: NDIlib_v5__bindgen_ty_37,
    pub __bindgen_anon_38: NDIlib_v5__bindgen_ty_38,
    pub __bindgen_anon_39: NDIlib_v5__bindgen_ty_39,
    pub __bindgen_anon_40: NDIlib_v5__bindgen_ty_40,
    pub __bindgen_anon_41: NDIlib_v5__bindgen_ty_41,
    pub __bindgen_anon_42: NDIlib_v5__bindgen_ty_42,
    pub __bindgen_anon_43: NDIlib_v5__bindgen_ty_43,
    pub __bindgen_anon_44: NDIlib_v5__bindgen_ty_44,
    pub __bindgen_anon_45: NDIlib_v5__bindgen_ty_45,
    pub __bindgen_anon_46: NDIlib_v5__bindgen_ty_46,
    pub __bindgen_anon_47: NDIlib_v5__bindgen_ty_47,
    pub __bindgen_anon_48: NDIlib_v5__bindgen_ty_48,
    pub __bindgen_anon_49: NDIlib_v5__bindgen_ty_49,
    pub __bindgen_anon_50: NDIlib_v5__bindgen_ty_50,
    pub __bindgen_anon_51: NDIlib_v5__bindgen_ty_51,
    pub __bindgen_anon_52: NDIlib_v5__bindgen_ty_52,
    pub __bindgen_anon_53: NDIlib_v5__bindgen_ty_53,
    pub __bindgen_anon_54: NDIlib_v5__bindgen_ty_54,
    pub __bindgen_anon_55: NDIlib_v5__bindgen_ty_55,
    pub __bindgen_anon_56: NDIlib_v5__bindgen_ty_56,
    pub __bindgen_anon_57: NDIlib_v5__bindgen_ty_57,
    pub __bindgen_anon_58: NDIlib_v5__bindgen_ty_58,
    pub __bindgen_anon_59: NDIlib_v5__bindgen_ty_59,
    pub __bindgen_anon_60: NDIlib_v5__bindgen_ty_60,
    pub __bindgen_anon_61: NDIlib_v5__bindgen_ty_61,
    pub __bindgen_anon_62: NDIlib_v5__bindgen_ty_62,
    pub __bindgen_anon_63: NDIlib_v5__bindgen_ty_63,
    pub __bindgen_anon_64: NDIlib_v5__bindgen_ty_64,
    pub __bindgen_anon_65: NDIlib_v5__bindgen_ty_65,
    pub __bindgen_anon_66: NDIlib_v5__bindgen_ty_66,
    pub __bindgen_anon_67: NDIlib_v5__bindgen_ty_67,
    pub __bindgen_anon_68: NDIlib_v5__bindgen_ty_68,
    pub __bindgen_anon_69: NDIlib_v5__bindgen_ty_69,
    pub __bindgen_anon_70: NDIlib_v5__bindgen_ty_70,
    pub __bindgen_anon_71: NDIlib_v5__bindgen_ty_71,
    pub __bindgen_anon_72: NDIlib_v5__bindgen_ty_72,
    pub __bindgen_anon_73: NDIlib_v5__bindgen_ty_73,
    pub __bindgen_anon_74: NDIlib_v5__bindgen_ty_74,
    pub __bindgen_anon_75: NDIlib_v5__bindgen_ty_75,
    pub __bindgen_anon_76: NDIlib_v5__bindgen_ty_76,
    pub __bindgen_anon_77: NDIlib_v5__bindgen_ty_77,
    pub __bindgen_anon_78: NDIlib_v5__bindgen_ty_78,
    pub __bindgen_anon_79: NDIlib_v5__bindgen_ty_79,
    pub __bindgen_anon_80: NDIlib_v5__bindgen_ty_80,
    pub __bindgen_anon_81: NDIlib_v5__bindgen_ty_81,
    pub __bindgen_anon_82: NDIlib_v5__bindgen_ty_82,
    pub __bindgen_anon_83: NDIlib_v5__bindgen_ty_83,
    pub __bindgen_anon_84: NDIlib_v5__bindgen_ty_84,
    pub __bindgen_anon_85: NDIlib_v5__bindgen_ty_85,
    pub __bindgen_anon_86: NDIlib_v5__bindgen_ty_86,
    pub __bindgen_anon_87: NDIlib_v5__bindgen_ty_87,
    pub __bindgen_anon_88: NDIlib_v5__bindgen_ty_88,
    pub __bindgen_anon_89: NDIlib_v5__bindgen_ty_89,
    pub __bindgen_anon_90: NDIlib_v5__bindgen_ty_90,
    pub __bindgen_anon_91: NDIlib_v5__bindgen_ty_91,
    pub __bindgen_anon_92: NDIlib_v5__bindgen_ty_92,
    pub __bindgen_anon_93: NDIlib_v5__bindgen_ty_93,
    pub __bindgen_anon_94: NDIlib_v5__bindgen_ty_94,
    pub __bindgen_anon_95: NDIlib_v5__bindgen_ty_95,
    pub __bindgen_anon_96: NDIlib_v5__bindgen_ty_96,
    pub __bindgen_anon_97: NDIlib_v5__bindgen_ty_97,
    pub __bindgen_anon_98: NDIlib_v5__bindgen_ty_98,
    pub __bindgen_anon_99: NDIlib_v5__bindgen_ty_99,
    pub __bindgen_anon_100: NDIlib_v5__bindgen_ty_100,
    pub __bindgen_anon_101: NDIlib_v5__bindgen_ty_101,
    pub __bindgen_anon_102: NDIlib_v5__bindgen_ty_102,
    pub __bindgen_anon_103: NDIlib_v5__bindgen_ty_103,
    pub __bindgen_anon_104: NDIlib_v5__bindgen_ty_104,
    pub __bindgen_anon_105: NDIlib_v5__bindgen_ty_105,
    pub __bindgen_anon_106: NDIlib_v5__bindgen_ty_106,
    pub __bindgen_anon_107: NDIlib_v5__bindgen_ty_107,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_1 {
    pub initialize: ::std::option::Option<unsafe extern "C" fn() -> bool>,
    pub NDIlib_initialize: ::std::option::Option<unsafe extern "C" fn() -> bool>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_1() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_1>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_1))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_1>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_1))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_1>())).initialize as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_1),
            "::",
            stringify!(initialize)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_1>())).NDIlib_initialize as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_1),
            "::",
            stringify!(NDIlib_initialize)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_2 {
    pub destroy: ::std::option::Option<unsafe extern "C" fn()>,
    pub NDIlib_destroy: ::std::option::Option<unsafe extern "C" fn()>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_2() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_2>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_2))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_2>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_2))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_2>())).destroy as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_2),
            "::",
            stringify!(destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_2>())).NDIlib_destroy as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_2),
            "::",
            stringify!(NDIlib_destroy)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_3 {
    pub version: ::std::option::Option<unsafe extern "C" fn() -> *const ::std::os::raw::c_char>,
    pub NDIlib_version:
        ::std::option::Option<unsafe extern "C" fn() -> *const ::std::os::raw::c_char>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_3() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_3>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_3))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_3>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_3))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_3>())).version as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_3),
            "::",
            stringify!(version)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_3>())).NDIlib_version as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_3),
            "::",
            stringify!(NDIlib_version)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_4 {
    pub is_supported_CPU: ::std::option::Option<unsafe extern "C" fn() -> bool>,
    pub NDIlib_is_supported_CPU: ::std::option::Option<unsafe extern "C" fn() -> bool>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_4() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_4>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_4))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_4>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_4))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_4>())).is_supported_CPU as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_4),
            "::",
            stringify!(is_supported_CPU)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_4>())).NDIlib_is_supported_CPU as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_4),
            "::",
            stringify!(NDIlib_is_supported_CPU)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_5 {
    pub find_create: ::std::option::Option<
        unsafe extern "C" fn(
            p_create_settings: *const NDIlib_find_create_t,
        ) -> NDIlib_find_instance_t,
    >,
    pub NDIlib_find_create: ::std::option::Option<
        unsafe extern "C" fn(
            p_create_settings: *const NDIlib_find_create_t,
        ) -> NDIlib_find_instance_t,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_5() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_5>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_5))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_5>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_5))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_5>())).find_create as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_5),
            "::",
            stringify!(find_create)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_5>())).NDIlib_find_create as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_5),
            "::",
            stringify!(NDIlib_find_create)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_6 {
    pub find_create_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_create_settings: *const NDIlib_find_create_t,
        ) -> NDIlib_find_instance_t,
    >,
    pub NDIlib_find_create_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_create_settings: *const NDIlib_find_create_t,
        ) -> NDIlib_find_instance_t,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_6() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_6>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_6))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_6>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_6))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_6>())).find_create_v2 as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_6),
            "::",
            stringify!(find_create_v2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_6>())).NDIlib_find_create_v2 as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_6),
            "::",
            stringify!(NDIlib_find_create_v2)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_7 {
    pub find_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_find_instance_t)>,
    pub NDIlib_find_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_find_instance_t)>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_7() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_7>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_7))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_7>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_7))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_7>())).find_destroy as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_7),
            "::",
            stringify!(find_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_7>())).NDIlib_find_destroy as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_7),
            "::",
            stringify!(NDIlib_find_destroy)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_8 {
    pub find_get_sources: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_find_instance_t,
            p_no_sources: *mut u32,
            timeout_in_ms: u32,
        ) -> *const NDIlib_source_t,
    >,
    pub NDIlib_find_get_sources: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_find_instance_t,
            p_no_sources: *mut u32,
            timeout_in_ms: u32,
        ) -> *const NDIlib_source_t,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_8() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_8>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_8))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_8>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_8))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_8>())).find_get_sources as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_8),
            "::",
            stringify!(find_get_sources)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_8>())).NDIlib_find_get_sources as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_8),
            "::",
            stringify!(NDIlib_find_get_sources)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_9 {
    pub send_create: ::std::option::Option<
        unsafe extern "C" fn(
            p_create_settings: *const NDIlib_send_create_t,
        ) -> NDIlib_send_instance_t,
    >,
    pub NDIlib_send_create: ::std::option::Option<
        unsafe extern "C" fn(
            p_create_settings: *const NDIlib_send_create_t,
        ) -> NDIlib_send_instance_t,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_9() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_9>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_9))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_9>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_9))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_9>())).send_create as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_9),
            "::",
            stringify!(send_create)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_9>())).NDIlib_send_create as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_9),
            "::",
            stringify!(NDIlib_send_create)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_10 {
    pub send_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_send_instance_t)>,
    pub NDIlib_send_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_send_instance_t)>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_10() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_10>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_10))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_10>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_10))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_10>())).send_destroy as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_10),
            "::",
            stringify!(send_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_10>())).NDIlib_send_destroy as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_10),
            "::",
            stringify!(NDIlib_send_destroy)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_11 {
    pub send_send_video: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_video_data: *const NDIlib_video_frame_t,
        ),
    >,
    pub NDIlib_send_send_video: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_video_data: *const NDIlib_video_frame_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_11() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_11>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_11))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_11>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_11))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_11>())).send_send_video as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_11),
            "::",
            stringify!(send_send_video)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_11>())).NDIlib_send_send_video as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_11),
            "::",
            stringify!(NDIlib_send_send_video)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_12 {
    pub send_send_video_async: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_video_data: *const NDIlib_video_frame_t,
        ),
    >,
    pub NDIlib_send_send_video_async: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_video_data: *const NDIlib_video_frame_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_12() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_12>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_12))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_12>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_12))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_12>())).send_send_video_async as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_12),
            "::",
            stringify!(send_send_video_async)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_12>())).NDIlib_send_send_video_async
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_12),
            "::",
            stringify!(NDIlib_send_send_video_async)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_13 {
    pub send_send_audio: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_audio_data: *const NDIlib_audio_frame_t,
        ),
    >,
    pub NDIlib_send_send_audio: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_audio_data: *const NDIlib_audio_frame_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_13() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_13>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_13))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_13>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_13))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_13>())).send_send_audio as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_13),
            "::",
            stringify!(send_send_audio)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_13>())).NDIlib_send_send_audio as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_13),
            "::",
            stringify!(NDIlib_send_send_audio)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_14 {
    pub send_send_metadata: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_metadata: *const NDIlib_metadata_frame_t,
        ),
    >,
    pub NDIlib_send_send_metadata: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_metadata: *const NDIlib_metadata_frame_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_14() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_14>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_14))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_14>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_14))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_14>())).send_send_metadata as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_14),
            "::",
            stringify!(send_send_metadata)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_14>())).NDIlib_send_send_metadata
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_14),
            "::",
            stringify!(NDIlib_send_send_metadata)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_15 {
    pub send_capture: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_metadata: *mut NDIlib_metadata_frame_t,
            timeout_in_ms: u32,
        ) -> NDIlib_frame_type_e,
    >,
    pub NDIlib_send_capture: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_metadata: *mut NDIlib_metadata_frame_t,
            timeout_in_ms: u32,
        ) -> NDIlib_frame_type_e,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_15() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_15>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_15))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_15>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_15))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_15>())).send_capture as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_15),
            "::",
            stringify!(send_capture)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_15>())).NDIlib_send_capture as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_15),
            "::",
            stringify!(NDIlib_send_capture)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_16 {
    pub send_free_metadata: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_metadata: *const NDIlib_metadata_frame_t,
        ),
    >,
    pub NDIlib_send_free_metadata: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_metadata: *const NDIlib_metadata_frame_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_16() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_16>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_16))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_16>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_16))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_16>())).send_free_metadata as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_16),
            "::",
            stringify!(send_free_metadata)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_16>())).NDIlib_send_free_metadata
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_16),
            "::",
            stringify!(NDIlib_send_free_metadata)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_17 {
    pub send_get_tally: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_tally: *mut NDIlib_tally_t,
            timeout_in_ms: u32,
        ) -> bool,
    >,
    pub NDIlib_send_get_tally: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_tally: *mut NDIlib_tally_t,
            timeout_in_ms: u32,
        ) -> bool,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_17() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_17>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_17))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_17>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_17))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_17>())).send_get_tally as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_17),
            "::",
            stringify!(send_get_tally)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_17>())).NDIlib_send_get_tally as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_17),
            "::",
            stringify!(NDIlib_send_get_tally)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_18 {
    pub send_get_no_connections: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            timeout_in_ms: u32,
        ) -> ::std::os::raw::c_int,
    >,
    pub NDIlib_send_get_no_connections: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            timeout_in_ms: u32,
        ) -> ::std::os::raw::c_int,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_18() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_18>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_18))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_18>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_18))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_18>())).send_get_no_connections as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_18),
            "::",
            stringify!(send_get_no_connections)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_18>())).NDIlib_send_get_no_connections
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_18),
            "::",
            stringify!(NDIlib_send_get_no_connections)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_19 {
    pub send_clear_connection_metadata:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_send_instance_t)>,
    pub NDIlib_send_clear_connection_metadata:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_send_instance_t)>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_19() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_19>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_19))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_19>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_19))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_19>())).send_clear_connection_metadata
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_19),
            "::",
            stringify!(send_clear_connection_metadata)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_19>()))
                .NDIlib_send_clear_connection_metadata as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_19),
            "::",
            stringify!(NDIlib_send_clear_connection_metadata)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_20 {
    pub send_add_connection_metadata: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_metadata: *const NDIlib_metadata_frame_t,
        ),
    >,
    pub NDIlib_send_add_connection_metadata: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_metadata: *const NDIlib_metadata_frame_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_20() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_20>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_20))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_20>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_20))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_20>())).send_add_connection_metadata
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_20),
            "::",
            stringify!(send_add_connection_metadata)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_20>())).NDIlib_send_add_connection_metadata
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_20),
            "::",
            stringify!(NDIlib_send_add_connection_metadata)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_21 {
    pub send_set_failover: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_failover_source: *const NDIlib_source_t,
        ),
    >,
    pub NDIlib_send_set_failover: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_failover_source: *const NDIlib_source_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_21() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_21>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_21))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_21>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_21))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_21>())).send_set_failover as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_21),
            "::",
            stringify!(send_set_failover)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_21>())).NDIlib_send_set_failover
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_21),
            "::",
            stringify!(NDIlib_send_set_failover)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_22 {
    pub recv_create_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_create_settings: *const NDIlib_recv_create_t,
        ) -> NDIlib_recv_instance_t,
    >,
    pub NDIlib_recv_create_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_create_settings: *const NDIlib_recv_create_t,
        ) -> NDIlib_recv_instance_t,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_22() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_22>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_22))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_22>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_22))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_22>())).recv_create_v2 as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_22),
            "::",
            stringify!(recv_create_v2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_22>())).NDIlib_recv_create_v2 as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_22),
            "::",
            stringify!(NDIlib_recv_create_v2)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_23 {
    pub recv_create: ::std::option::Option<
        unsafe extern "C" fn(
            p_create_settings: *const NDIlib_recv_create_t,
        ) -> NDIlib_recv_instance_t,
    >,
    pub NDIlib_recv_create: ::std::option::Option<
        unsafe extern "C" fn(
            p_create_settings: *const NDIlib_recv_create_t,
        ) -> NDIlib_recv_instance_t,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_23() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_23>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_23))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_23>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_23))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_23>())).recv_create as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_23),
            "::",
            stringify!(recv_create)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_23>())).NDIlib_recv_create as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_23),
            "::",
            stringify!(NDIlib_recv_create)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_24 {
    pub recv_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t)>,
    pub NDIlib_recv_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t)>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_24() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_24>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_24))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_24>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_24))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_24>())).recv_destroy as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_24),
            "::",
            stringify!(recv_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_24>())).NDIlib_recv_destroy as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_24),
            "::",
            stringify!(NDIlib_recv_destroy)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_25 {
    pub recv_capture: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_video_data: *mut NDIlib_video_frame_t,
            p_audio_data: *mut NDIlib_audio_frame_t,
            p_metadata: *mut NDIlib_metadata_frame_t,
            timeout_in_ms: u32,
        ) -> NDIlib_frame_type_e,
    >,
    pub NDIlib_recv_capture: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_video_data: *mut NDIlib_video_frame_t,
            p_audio_data: *mut NDIlib_audio_frame_t,
            p_metadata: *mut NDIlib_metadata_frame_t,
            timeout_in_ms: u32,
        ) -> NDIlib_frame_type_e,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_25() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_25>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_25))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_25>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_25))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_25>())).recv_capture as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_25),
            "::",
            stringify!(recv_capture)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_25>())).NDIlib_recv_capture as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_25),
            "::",
            stringify!(NDIlib_recv_capture)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_26 {
    pub recv_free_video: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_video_data: *const NDIlib_video_frame_t,
        ),
    >,
    pub NDIlib_recv_free_video: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_video_data: *const NDIlib_video_frame_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_26() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_26>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_26))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_26>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_26))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_26>())).recv_free_video as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_26),
            "::",
            stringify!(recv_free_video)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_26>())).NDIlib_recv_free_video as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_26),
            "::",
            stringify!(NDIlib_recv_free_video)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_27 {
    pub recv_free_audio: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_audio_data: *const NDIlib_audio_frame_t,
        ),
    >,
    pub NDIlib_recv_free_audio: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_audio_data: *const NDIlib_audio_frame_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_27() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_27>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_27))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_27>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_27))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_27>())).recv_free_audio as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_27),
            "::",
            stringify!(recv_free_audio)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_27>())).NDIlib_recv_free_audio as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_27),
            "::",
            stringify!(NDIlib_recv_free_audio)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_28 {
    pub recv_free_metadata: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_metadata: *const NDIlib_metadata_frame_t,
        ),
    >,
    pub NDIlib_recv_free_metadata: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_metadata: *const NDIlib_metadata_frame_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_28() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_28>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_28))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_28>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_28))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_28>())).recv_free_metadata as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_28),
            "::",
            stringify!(recv_free_metadata)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_28>())).NDIlib_recv_free_metadata
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_28),
            "::",
            stringify!(NDIlib_recv_free_metadata)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_29 {
    pub recv_send_metadata: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_metadata: *const NDIlib_metadata_frame_t,
        ) -> bool,
    >,
    pub NDIlib_recv_send_metadata: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_metadata: *const NDIlib_metadata_frame_t,
        ) -> bool,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_29() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_29>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_29))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_29>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_29))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_29>())).recv_send_metadata as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_29),
            "::",
            stringify!(recv_send_metadata)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_29>())).NDIlib_recv_send_metadata
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_29),
            "::",
            stringify!(NDIlib_recv_send_metadata)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_30 {
    pub recv_set_tally: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_tally: *const NDIlib_tally_t,
        ) -> bool,
    >,
    pub NDIlib_recv_set_tally: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_tally: *const NDIlib_tally_t,
        ) -> bool,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_30() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_30>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_30))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_30>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_30))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_30>())).recv_set_tally as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_30),
            "::",
            stringify!(recv_set_tally)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_30>())).NDIlib_recv_set_tally as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_30),
            "::",
            stringify!(NDIlib_recv_set_tally)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_31 {
    pub recv_get_performance: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_total: *mut NDIlib_recv_performance_t,
            p_dropped: *mut NDIlib_recv_performance_t,
        ),
    >,
    pub NDIlib_recv_get_performance: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_total: *mut NDIlib_recv_performance_t,
            p_dropped: *mut NDIlib_recv_performance_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_31() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_31>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_31))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_31>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_31))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_31>())).recv_get_performance as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_31),
            "::",
            stringify!(recv_get_performance)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_31>())).NDIlib_recv_get_performance
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_31),
            "::",
            stringify!(NDIlib_recv_get_performance)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_32 {
    pub recv_get_queue: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t, p_total: *mut NDIlib_recv_queue_t),
    >,
    pub NDIlib_recv_get_queue: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t, p_total: *mut NDIlib_recv_queue_t),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_32() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_32>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_32))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_32>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_32))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_32>())).recv_get_queue as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_32),
            "::",
            stringify!(recv_get_queue)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_32>())).NDIlib_recv_get_queue as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_32),
            "::",
            stringify!(NDIlib_recv_get_queue)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_33 {
    pub recv_clear_connection_metadata:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t)>,
    pub NDIlib_recv_clear_connection_metadata:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t)>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_33() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_33>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_33))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_33>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_33))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_33>())).recv_clear_connection_metadata
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_33),
            "::",
            stringify!(recv_clear_connection_metadata)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_33>()))
                .NDIlib_recv_clear_connection_metadata as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_33),
            "::",
            stringify!(NDIlib_recv_clear_connection_metadata)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_34 {
    pub recv_add_connection_metadata: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_metadata: *const NDIlib_metadata_frame_t,
        ),
    >,
    pub NDIlib_recv_add_connection_metadata: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_metadata: *const NDIlib_metadata_frame_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_34() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_34>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_34))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_34>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_34))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_34>())).recv_add_connection_metadata
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_34),
            "::",
            stringify!(recv_add_connection_metadata)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_34>())).NDIlib_recv_add_connection_metadata
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_34),
            "::",
            stringify!(NDIlib_recv_add_connection_metadata)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_35 {
    pub recv_get_no_connections: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> ::std::os::raw::c_int,
    >,
    pub NDIlib_recv_get_no_connections: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> ::std::os::raw::c_int,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_35() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_35>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_35))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_35>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_35))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_35>())).recv_get_no_connections as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_35),
            "::",
            stringify!(recv_get_no_connections)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_35>())).NDIlib_recv_get_no_connections
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_35),
            "::",
            stringify!(NDIlib_recv_get_no_connections)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_36 {
    pub routing_create: ::std::option::Option<
        unsafe extern "C" fn(
            p_create_settings: *const NDIlib_routing_create_t,
        ) -> NDIlib_routing_instance_t,
    >,
    pub NDIlib_routing_create: ::std::option::Option<
        unsafe extern "C" fn(
            p_create_settings: *const NDIlib_routing_create_t,
        ) -> NDIlib_routing_instance_t,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_36() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_36>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_36))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_36>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_36))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_36>())).routing_create as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_36),
            "::",
            stringify!(routing_create)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_36>())).NDIlib_routing_create as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_36),
            "::",
            stringify!(NDIlib_routing_create)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_37 {
    pub routing_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_routing_instance_t)>,
    pub NDIlib_routing_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_routing_instance_t)>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_37() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_37>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_37))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_37>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_37))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_37>())).routing_destroy as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_37),
            "::",
            stringify!(routing_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_37>())).NDIlib_routing_destroy as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_37),
            "::",
            stringify!(NDIlib_routing_destroy)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_38 {
    pub routing_change: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_routing_instance_t,
            p_source: *const NDIlib_source_t,
        ) -> bool,
    >,
    pub NDIlib_routing_change: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_routing_instance_t,
            p_source: *const NDIlib_source_t,
        ) -> bool,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_38() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_38>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_38))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_38>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_38))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_38>())).routing_change as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_38),
            "::",
            stringify!(routing_change)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_38>())).NDIlib_routing_change as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_38),
            "::",
            stringify!(NDIlib_routing_change)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_39 {
    pub routing_clear:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_routing_instance_t) -> bool>,
    pub NDIlib_routing_clear:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_routing_instance_t) -> bool>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_39() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_39>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_39))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_39>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_39))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_39>())).routing_clear as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_39),
            "::",
            stringify!(routing_clear)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_39>())).NDIlib_routing_clear as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_39),
            "::",
            stringify!(NDIlib_routing_clear)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_40 {
    pub util_send_send_audio_interleaved_16s: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_audio_data: *const NDIlib_audio_frame_interleaved_16s_t,
        ),
    >,
    pub NDIlib_util_send_send_audio_interleaved_16s: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_audio_data: *const NDIlib_audio_frame_interleaved_16s_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_40() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_40>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_40))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_40>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_40))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_40>()))
                .util_send_send_audio_interleaved_16s as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_40),
            "::",
            stringify!(util_send_send_audio_interleaved_16s)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_40>()))
                .NDIlib_util_send_send_audio_interleaved_16s as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_40),
            "::",
            stringify!(NDIlib_util_send_send_audio_interleaved_16s)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_41 {
    pub util_audio_to_interleaved_16s: ::std::option::Option<
        unsafe extern "C" fn(
            p_src: *const NDIlib_audio_frame_t,
            p_dst: *mut NDIlib_audio_frame_interleaved_16s_t,
        ),
    >,
    pub NDIlib_util_audio_to_interleaved_16s: ::std::option::Option<
        unsafe extern "C" fn(
            p_src: *const NDIlib_audio_frame_t,
            p_dst: *mut NDIlib_audio_frame_interleaved_16s_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_41() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_41>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_41))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_41>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_41))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_41>())).util_audio_to_interleaved_16s
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_41),
            "::",
            stringify!(util_audio_to_interleaved_16s)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_41>()))
                .NDIlib_util_audio_to_interleaved_16s as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_41),
            "::",
            stringify!(NDIlib_util_audio_to_interleaved_16s)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_42 {
    pub util_audio_from_interleaved_16s: ::std::option::Option<
        unsafe extern "C" fn(
            p_src: *const NDIlib_audio_frame_interleaved_16s_t,
            p_dst: *mut NDIlib_audio_frame_t,
        ),
    >,
    pub NDIlib_util_audio_from_interleaved_16s: ::std::option::Option<
        unsafe extern "C" fn(
            p_src: *const NDIlib_audio_frame_interleaved_16s_t,
            p_dst: *mut NDIlib_audio_frame_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_42() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_42>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_42))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_42>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_42))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_42>())).util_audio_from_interleaved_16s
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_42),
            "::",
            stringify!(util_audio_from_interleaved_16s)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_42>()))
                .NDIlib_util_audio_from_interleaved_16s as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_42),
            "::",
            stringify!(NDIlib_util_audio_from_interleaved_16s)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_43 {
    pub find_wait_for_sources: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_find_instance_t, timeout_in_ms: u32) -> bool,
    >,
    pub NDIlib_find_wait_for_sources: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_find_instance_t, timeout_in_ms: u32) -> bool,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_43() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_43>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_43))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_43>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_43))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_43>())).find_wait_for_sources as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_43),
            "::",
            stringify!(find_wait_for_sources)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_43>())).NDIlib_find_wait_for_sources
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_43),
            "::",
            stringify!(NDIlib_find_wait_for_sources)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_44 {
    pub find_get_current_sources: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_find_instance_t,
            p_no_sources: *mut u32,
        ) -> *const NDIlib_source_t,
    >,
    pub NDIlib_find_get_current_sources: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_find_instance_t,
            p_no_sources: *mut u32,
        ) -> *const NDIlib_source_t,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_44() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_44>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_44))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_44>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_44))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_44>())).find_get_current_sources
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_44),
            "::",
            stringify!(find_get_current_sources)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_44>())).NDIlib_find_get_current_sources
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_44),
            "::",
            stringify!(NDIlib_find_get_current_sources)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_45 {
    pub util_audio_to_interleaved_32f: ::std::option::Option<
        unsafe extern "C" fn(
            p_src: *const NDIlib_audio_frame_t,
            p_dst: *mut NDIlib_audio_frame_interleaved_32f_t,
        ),
    >,
    pub NDIlib_util_audio_to_interleaved_32f: ::std::option::Option<
        unsafe extern "C" fn(
            p_src: *const NDIlib_audio_frame_t,
            p_dst: *mut NDIlib_audio_frame_interleaved_32f_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_45() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_45>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_45))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_45>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_45))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_45>())).util_audio_to_interleaved_32f
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_45),
            "::",
            stringify!(util_audio_to_interleaved_32f)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_45>()))
                .NDIlib_util_audio_to_interleaved_32f as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_45),
            "::",
            stringify!(NDIlib_util_audio_to_interleaved_32f)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_46 {
    pub util_audio_from_interleaved_32f: ::std::option::Option<
        unsafe extern "C" fn(
            p_src: *const NDIlib_audio_frame_interleaved_32f_t,
            p_dst: *mut NDIlib_audio_frame_t,
        ),
    >,
    pub NDIlib_util_audio_from_interleaved_32f: ::std::option::Option<
        unsafe extern "C" fn(
            p_src: *const NDIlib_audio_frame_interleaved_32f_t,
            p_dst: *mut NDIlib_audio_frame_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_46() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_46>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_46))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_46>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_46))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_46>())).util_audio_from_interleaved_32f
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_46),
            "::",
            stringify!(util_audio_from_interleaved_32f)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_46>()))
                .NDIlib_util_audio_from_interleaved_32f as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_46),
            "::",
            stringify!(NDIlib_util_audio_from_interleaved_32f)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_47 {
    pub util_send_send_audio_interleaved_32f: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_audio_data: *const NDIlib_audio_frame_interleaved_32f_t,
        ),
    >,
    pub NDIlib_util_send_send_audio_interleaved_32f: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_audio_data: *const NDIlib_audio_frame_interleaved_32f_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_47() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_47>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_47))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_47>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_47))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_47>()))
                .util_send_send_audio_interleaved_32f as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_47),
            "::",
            stringify!(util_send_send_audio_interleaved_32f)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_47>()))
                .NDIlib_util_send_send_audio_interleaved_32f as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_47),
            "::",
            stringify!(NDIlib_util_send_send_audio_interleaved_32f)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_48 {
    pub recv_free_video_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_video_data: *const NDIlib_video_frame_v2_t,
        ),
    >,
    pub NDIlib_recv_free_video_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_video_data: *const NDIlib_video_frame_v2_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_48() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_48>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_48))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_48>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_48))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_48>())).recv_free_video_v2 as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_48),
            "::",
            stringify!(recv_free_video_v2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_48>())).NDIlib_recv_free_video_v2
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_48),
            "::",
            stringify!(NDIlib_recv_free_video_v2)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_49 {
    pub recv_free_audio_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_audio_data: *const NDIlib_audio_frame_v2_t,
        ),
    >,
    pub NDIlib_recv_free_audio_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_audio_data: *const NDIlib_audio_frame_v2_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_49() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_49>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_49))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_49>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_49))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_49>())).recv_free_audio_v2 as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_49),
            "::",
            stringify!(recv_free_audio_v2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_49>())).NDIlib_recv_free_audio_v2
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_49),
            "::",
            stringify!(NDIlib_recv_free_audio_v2)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_50 {
    pub recv_capture_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_video_data: *mut NDIlib_video_frame_v2_t,
            p_audio_data: *mut NDIlib_audio_frame_v2_t,
            p_metadata: *mut NDIlib_metadata_frame_t,
            timeout_in_ms: u32,
        ) -> NDIlib_frame_type_e,
    >,
    pub NDIlib_recv_capture_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_video_data: *mut NDIlib_video_frame_v2_t,
            p_audio_data: *mut NDIlib_audio_frame_v2_t,
            p_metadata: *mut NDIlib_metadata_frame_t,
            timeout_in_ms: u32,
        ) -> NDIlib_frame_type_e,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_50() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_50>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_50))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_50>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_50))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_50>())).recv_capture_v2 as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_50),
            "::",
            stringify!(recv_capture_v2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_50>())).NDIlib_recv_capture_v2 as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_50),
            "::",
            stringify!(NDIlib_recv_capture_v2)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_51 {
    pub send_send_video_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_video_data: *const NDIlib_video_frame_v2_t,
        ),
    >,
    pub NDIlib_send_send_video_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_video_data: *const NDIlib_video_frame_v2_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_51() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_51>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_51))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_51>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_51))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_51>())).send_send_video_v2 as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_51),
            "::",
            stringify!(send_send_video_v2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_51>())).NDIlib_send_send_video_v2
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_51),
            "::",
            stringify!(NDIlib_send_send_video_v2)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_52 {
    pub send_send_video_async_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_video_data: *const NDIlib_video_frame_v2_t,
        ),
    >,
    pub NDIlib_send_send_video_async_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_video_data: *const NDIlib_video_frame_v2_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_52() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_52>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_52))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_52>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_52))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_52>())).send_send_video_async_v2
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_52),
            "::",
            stringify!(send_send_video_async_v2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_52>())).NDIlib_send_send_video_async_v2
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_52),
            "::",
            stringify!(NDIlib_send_send_video_async_v2)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_53 {
    pub send_send_audio_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_audio_data: *const NDIlib_audio_frame_v2_t,
        ),
    >,
    pub NDIlib_send_send_audio_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_audio_data: *const NDIlib_audio_frame_v2_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_53() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_53>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_53))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_53>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_53))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_53>())).send_send_audio_v2 as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_53),
            "::",
            stringify!(send_send_audio_v2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_53>())).NDIlib_send_send_audio_v2
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_53),
            "::",
            stringify!(NDIlib_send_send_audio_v2)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_54 {
    pub util_audio_to_interleaved_16s_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_src: *const NDIlib_audio_frame_v2_t,
            p_dst: *mut NDIlib_audio_frame_interleaved_16s_t,
        ),
    >,
    pub NDIlib_util_audio_to_interleaved_16s_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_src: *const NDIlib_audio_frame_v2_t,
            p_dst: *mut NDIlib_audio_frame_interleaved_16s_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_54() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_54>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_54))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_54>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_54))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_54>())).util_audio_to_interleaved_16s_v2
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_54),
            "::",
            stringify!(util_audio_to_interleaved_16s_v2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_54>()))
                .NDIlib_util_audio_to_interleaved_16s_v2 as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_54),
            "::",
            stringify!(NDIlib_util_audio_to_interleaved_16s_v2)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_55 {
    pub util_audio_from_interleaved_16s_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_src: *const NDIlib_audio_frame_interleaved_16s_t,
            p_dst: *mut NDIlib_audio_frame_v2_t,
        ),
    >,
    pub NDIlib_util_audio_from_interleaved_16s_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_src: *const NDIlib_audio_frame_interleaved_16s_t,
            p_dst: *mut NDIlib_audio_frame_v2_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_55() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_55>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_55))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_55>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_55))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_55>())).util_audio_from_interleaved_16s_v2
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_55),
            "::",
            stringify!(util_audio_from_interleaved_16s_v2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_55>()))
                .NDIlib_util_audio_from_interleaved_16s_v2 as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_55),
            "::",
            stringify!(NDIlib_util_audio_from_interleaved_16s_v2)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_56 {
    pub util_audio_to_interleaved_32f_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_src: *const NDIlib_audio_frame_v2_t,
            p_dst: *mut NDIlib_audio_frame_interleaved_32f_t,
        ),
    >,
    pub NDIlib_util_audio_to_interleaved_32f_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_src: *const NDIlib_audio_frame_v2_t,
            p_dst: *mut NDIlib_audio_frame_interleaved_32f_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_56() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_56>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_56))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_56>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_56))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_56>())).util_audio_to_interleaved_32f_v2
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_56),
            "::",
            stringify!(util_audio_to_interleaved_32f_v2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_56>()))
                .NDIlib_util_audio_to_interleaved_32f_v2 as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_56),
            "::",
            stringify!(NDIlib_util_audio_to_interleaved_32f_v2)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_57 {
    pub util_audio_from_interleaved_32f_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_src: *const NDIlib_audio_frame_interleaved_32f_t,
            p_dst: *mut NDIlib_audio_frame_v2_t,
        ),
    >,
    pub NDIlib_util_audio_from_interleaved_32f_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_src: *const NDIlib_audio_frame_interleaved_32f_t,
            p_dst: *mut NDIlib_audio_frame_v2_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_57() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_57>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_57))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_57>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_57))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_57>())).util_audio_from_interleaved_32f_v2
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_57),
            "::",
            stringify!(util_audio_from_interleaved_32f_v2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_57>()))
                .NDIlib_util_audio_from_interleaved_32f_v2 as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_57),
            "::",
            stringify!(NDIlib_util_audio_from_interleaved_32f_v2)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_58 {
    pub recv_free_string: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_string: *const ::std::os::raw::c_char,
        ),
    >,
    pub NDIlib_recv_free_string: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_string: *const ::std::os::raw::c_char,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_58() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_58>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_58))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_58>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_58))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_58>())).recv_free_string as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_58),
            "::",
            stringify!(recv_free_string)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_58>())).NDIlib_recv_free_string as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_58),
            "::",
            stringify!(NDIlib_recv_free_string)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_59 {
    pub recv_ptz_is_supported:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> bool>,
    pub NDIlib_recv_ptz_is_supported:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> bool>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_59() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_59>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_59))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_59>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_59))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_59>())).recv_ptz_is_supported as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_59),
            "::",
            stringify!(recv_ptz_is_supported)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_59>())).NDIlib_recv_ptz_is_supported
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_59),
            "::",
            stringify!(NDIlib_recv_ptz_is_supported)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_60 {
    pub recv_recording_is_supported:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> bool>,
    pub NDIlib_recv_recording_is_supported:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> bool>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_60() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_60>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_60))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_60>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_60))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_60>())).recv_recording_is_supported
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_60),
            "::",
            stringify!(recv_recording_is_supported)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_60>())).NDIlib_recv_recording_is_supported
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_60),
            "::",
            stringify!(NDIlib_recv_recording_is_supported)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_61 {
    pub recv_get_web_control: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> *const ::std::os::raw::c_char,
    >,
    pub NDIlib_recv_get_web_control: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> *const ::std::os::raw::c_char,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_61() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_61>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_61))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_61>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_61))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_61>())).recv_get_web_control as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_61),
            "::",
            stringify!(recv_get_web_control)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_61>())).NDIlib_recv_get_web_control
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_61),
            "::",
            stringify!(NDIlib_recv_get_web_control)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_62 {
    pub recv_ptz_zoom: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t, zoom_value: f32) -> bool,
    >,
    pub NDIlib_recv_ptz_zoom: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t, zoom_value: f32) -> bool,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_62() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_62>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_62))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_62>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_62))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_62>())).recv_ptz_zoom as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_62),
            "::",
            stringify!(recv_ptz_zoom)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_62>())).NDIlib_recv_ptz_zoom as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_62),
            "::",
            stringify!(NDIlib_recv_ptz_zoom)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_63 {
    pub recv_ptz_zoom_speed: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t, zoom_speed: f32) -> bool,
    >,
    pub NDIlib_recv_ptz_zoom_speed: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t, zoom_speed: f32) -> bool,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_63() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_63>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_63))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_63>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_63))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_63>())).recv_ptz_zoom_speed as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_63),
            "::",
            stringify!(recv_ptz_zoom_speed)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_63>())).NDIlib_recv_ptz_zoom_speed
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_63),
            "::",
            stringify!(NDIlib_recv_ptz_zoom_speed)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_64 {
    pub recv_ptz_pan_tilt: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            pan_value: f32,
            tilt_value: f32,
        ) -> bool,
    >,
    pub NDIlib_recv_ptz_pan_tilt: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            pan_value: f32,
            tilt_value: f32,
        ) -> bool,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_64() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_64>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_64))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_64>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_64))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_64>())).recv_ptz_pan_tilt as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_64),
            "::",
            stringify!(recv_ptz_pan_tilt)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_64>())).NDIlib_recv_ptz_pan_tilt
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_64),
            "::",
            stringify!(NDIlib_recv_ptz_pan_tilt)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_65 {
    pub recv_ptz_pan_tilt_speed: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            pan_speed: f32,
            tilt_speed: f32,
        ) -> bool,
    >,
    pub NDIlib_recv_ptz_pan_tilt_speed: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            pan_speed: f32,
            tilt_speed: f32,
        ) -> bool,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_65() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_65>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_65))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_65>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_65))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_65>())).recv_ptz_pan_tilt_speed as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_65),
            "::",
            stringify!(recv_ptz_pan_tilt_speed)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_65>())).NDIlib_recv_ptz_pan_tilt_speed
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_65),
            "::",
            stringify!(NDIlib_recv_ptz_pan_tilt_speed)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_66 {
    pub recv_ptz_store_preset: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            preset_no: ::std::os::raw::c_int,
        ) -> bool,
    >,
    pub NDIlib_recv_ptz_store_preset: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            preset_no: ::std::os::raw::c_int,
        ) -> bool,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_66() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_66>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_66))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_66>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_66))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_66>())).recv_ptz_store_preset as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_66),
            "::",
            stringify!(recv_ptz_store_preset)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_66>())).NDIlib_recv_ptz_store_preset
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_66),
            "::",
            stringify!(NDIlib_recv_ptz_store_preset)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_67 {
    pub recv_ptz_recall_preset: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            preset_no: ::std::os::raw::c_int,
            speed: f32,
        ) -> bool,
    >,
    pub NDIlib_recv_ptz_recall_preset: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            preset_no: ::std::os::raw::c_int,
            speed: f32,
        ) -> bool,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_67() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_67>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_67))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_67>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_67))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_67>())).recv_ptz_recall_preset as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_67),
            "::",
            stringify!(recv_ptz_recall_preset)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_67>())).NDIlib_recv_ptz_recall_preset
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_67),
            "::",
            stringify!(NDIlib_recv_ptz_recall_preset)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_68 {
    pub recv_ptz_auto_focus:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> bool>,
    pub NDIlib_recv_ptz_auto_focus:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> bool>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_68() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_68>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_68))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_68>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_68))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_68>())).recv_ptz_auto_focus as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_68),
            "::",
            stringify!(recv_ptz_auto_focus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_68>())).NDIlib_recv_ptz_auto_focus
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_68),
            "::",
            stringify!(NDIlib_recv_ptz_auto_focus)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_69 {
    pub recv_ptz_focus: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t, focus_value: f32) -> bool,
    >,
    pub NDIlib_recv_ptz_focus: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t, focus_value: f32) -> bool,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_69() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_69>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_69))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_69>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_69))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_69>())).recv_ptz_focus as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_69),
            "::",
            stringify!(recv_ptz_focus)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_69>())).NDIlib_recv_ptz_focus as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_69),
            "::",
            stringify!(NDIlib_recv_ptz_focus)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_70 {
    pub recv_ptz_focus_speed: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t, focus_speed: f32) -> bool,
    >,
    pub NDIlib_recv_ptz_focus_speed: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t, focus_speed: f32) -> bool,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_70() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_70>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_70))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_70>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_70))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_70>())).recv_ptz_focus_speed as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_70),
            "::",
            stringify!(recv_ptz_focus_speed)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_70>())).NDIlib_recv_ptz_focus_speed
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_70),
            "::",
            stringify!(NDIlib_recv_ptz_focus_speed)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_71 {
    pub recv_ptz_white_balance_auto:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> bool>,
    pub NDIlib_recv_ptz_white_balance_auto:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> bool>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_71() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_71>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_71))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_71>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_71))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_71>())).recv_ptz_white_balance_auto
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_71),
            "::",
            stringify!(recv_ptz_white_balance_auto)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_71>())).NDIlib_recv_ptz_white_balance_auto
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_71),
            "::",
            stringify!(NDIlib_recv_ptz_white_balance_auto)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_72 {
    pub recv_ptz_white_balance_indoor:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> bool>,
    pub NDIlib_recv_ptz_white_balance_indoor:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> bool>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_72() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_72>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_72))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_72>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_72))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_72>())).recv_ptz_white_balance_indoor
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_72),
            "::",
            stringify!(recv_ptz_white_balance_indoor)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_72>()))
                .NDIlib_recv_ptz_white_balance_indoor as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_72),
            "::",
            stringify!(NDIlib_recv_ptz_white_balance_indoor)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_73 {
    pub recv_ptz_white_balance_outdoor:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> bool>,
    pub NDIlib_recv_ptz_white_balance_outdoor:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> bool>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_73() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_73>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_73))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_73>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_73))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_73>())).recv_ptz_white_balance_outdoor
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_73),
            "::",
            stringify!(recv_ptz_white_balance_outdoor)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_73>()))
                .NDIlib_recv_ptz_white_balance_outdoor as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_73),
            "::",
            stringify!(NDIlib_recv_ptz_white_balance_outdoor)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_74 {
    pub recv_ptz_white_balance_oneshot:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> bool>,
    pub NDIlib_recv_ptz_white_balance_oneshot:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> bool>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_74() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_74>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_74))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_74>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_74))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_74>())).recv_ptz_white_balance_oneshot
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_74),
            "::",
            stringify!(recv_ptz_white_balance_oneshot)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_74>()))
                .NDIlib_recv_ptz_white_balance_oneshot as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_74),
            "::",
            stringify!(NDIlib_recv_ptz_white_balance_oneshot)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_75 {
    pub recv_ptz_white_balance_manual: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t, red: f32, blue: f32) -> bool,
    >,
    pub NDIlib_recv_ptz_white_balance_manual: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t, red: f32, blue: f32) -> bool,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_75() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_75>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_75))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_75>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_75))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_75>())).recv_ptz_white_balance_manual
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_75),
            "::",
            stringify!(recv_ptz_white_balance_manual)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_75>()))
                .NDIlib_recv_ptz_white_balance_manual as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_75),
            "::",
            stringify!(NDIlib_recv_ptz_white_balance_manual)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_76 {
    pub recv_ptz_exposure_auto:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> bool>,
    pub NDIlib_recv_ptz_exposure_auto:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> bool>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_76() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_76>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_76))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_76>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_76))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_76>())).recv_ptz_exposure_auto as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_76),
            "::",
            stringify!(recv_ptz_exposure_auto)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_76>())).NDIlib_recv_ptz_exposure_auto
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_76),
            "::",
            stringify!(NDIlib_recv_ptz_exposure_auto)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_77 {
    pub recv_ptz_exposure_manual: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t, exposure_level: f32) -> bool,
    >,
    pub NDIlib_recv_ptz_exposure_manual: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t, exposure_level: f32) -> bool,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_77() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_77>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_77))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_77>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_77))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_77>())).recv_ptz_exposure_manual
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_77),
            "::",
            stringify!(recv_ptz_exposure_manual)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_77>())).NDIlib_recv_ptz_exposure_manual
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_77),
            "::",
            stringify!(NDIlib_recv_ptz_exposure_manual)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_78 {
    pub recv_recording_start: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_filename_hint: *const ::std::os::raw::c_char,
        ) -> bool,
    >,
    pub NDIlib_recv_recording_start: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_filename_hint: *const ::std::os::raw::c_char,
        ) -> bool,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_78() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_78>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_78))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_78>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_78))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_78>())).recv_recording_start as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_78),
            "::",
            stringify!(recv_recording_start)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_78>())).NDIlib_recv_recording_start
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_78),
            "::",
            stringify!(NDIlib_recv_recording_start)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_79 {
    pub recv_recording_stop:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> bool>,
    pub NDIlib_recv_recording_stop:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> bool>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_79() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_79>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_79))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_79>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_79))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_79>())).recv_recording_stop as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_79),
            "::",
            stringify!(recv_recording_stop)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_79>())).NDIlib_recv_recording_stop
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_79),
            "::",
            stringify!(NDIlib_recv_recording_stop)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_80 {
    pub recv_recording_set_audio_level: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t, level_dB: f32) -> bool,
    >,
    pub NDIlib_recv_recording_set_audio_level: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t, level_dB: f32) -> bool,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_80() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_80>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_80))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_80>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_80))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_80>())).recv_recording_set_audio_level
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_80),
            "::",
            stringify!(recv_recording_set_audio_level)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_80>()))
                .NDIlib_recv_recording_set_audio_level as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_80),
            "::",
            stringify!(NDIlib_recv_recording_set_audio_level)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_81 {
    pub recv_recording_is_recording:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> bool>,
    pub NDIlib_recv_recording_is_recording:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> bool>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_81() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_81>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_81))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_81>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_81))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_81>())).recv_recording_is_recording
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_81),
            "::",
            stringify!(recv_recording_is_recording)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_81>())).NDIlib_recv_recording_is_recording
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_81),
            "::",
            stringify!(NDIlib_recv_recording_is_recording)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_82 {
    pub recv_recording_get_filename: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> *const ::std::os::raw::c_char,
    >,
    pub NDIlib_recv_recording_get_filename: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> *const ::std::os::raw::c_char,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_82() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_82>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_82))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_82>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_82))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_82>())).recv_recording_get_filename
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_82),
            "::",
            stringify!(recv_recording_get_filename)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_82>())).NDIlib_recv_recording_get_filename
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_82),
            "::",
            stringify!(NDIlib_recv_recording_get_filename)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_83 {
    pub recv_recording_get_error: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> *const ::std::os::raw::c_char,
    >,
    pub NDIlib_recv_recording_get_error: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t) -> *const ::std::os::raw::c_char,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_83() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_83>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_83))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_83>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_83))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_83>())).recv_recording_get_error
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_83),
            "::",
            stringify!(recv_recording_get_error)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_83>())).NDIlib_recv_recording_get_error
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_83),
            "::",
            stringify!(NDIlib_recv_recording_get_error)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_84 {
    pub recv_recording_get_times: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_times: *mut NDIlib_recv_recording_time_t,
        ) -> bool,
    >,
    pub NDIlib_recv_recording_get_times: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_times: *mut NDIlib_recv_recording_time_t,
        ) -> bool,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_84() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_84>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_84))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_84>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_84))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_84>())).recv_recording_get_times
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_84),
            "::",
            stringify!(recv_recording_get_times)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_84>())).NDIlib_recv_recording_get_times
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_84),
            "::",
            stringify!(NDIlib_recv_recording_get_times)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_85 {
    pub recv_create_v3: ::std::option::Option<
        unsafe extern "C" fn(
            p_create_settings: *const NDIlib_recv_create_v3_t,
        ) -> NDIlib_recv_instance_t,
    >,
    pub NDIlib_recv_create_v3: ::std::option::Option<
        unsafe extern "C" fn(
            p_create_settings: *const NDIlib_recv_create_v3_t,
        ) -> NDIlib_recv_instance_t,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_85() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_85>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_85))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_85>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_85))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_85>())).recv_create_v3 as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_85),
            "::",
            stringify!(recv_create_v3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_85>())).NDIlib_recv_create_v3 as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_85),
            "::",
            stringify!(NDIlib_recv_create_v3)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_86 {
    pub recv_connect: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t, p_src: *const NDIlib_source_t),
    >,
    pub NDIlib_recv_connect: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_recv_instance_t, p_src: *const NDIlib_source_t),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_86() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_86>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_86))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_86>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_86))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_86>())).recv_connect as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_86),
            "::",
            stringify!(recv_connect)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_86>())).NDIlib_recv_connect as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_86),
            "::",
            stringify!(NDIlib_recv_connect)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_87 {
    pub framesync_create: ::std::option::Option<
        unsafe extern "C" fn(p_receiver: NDIlib_recv_instance_t) -> NDIlib_framesync_instance_t,
    >,
    pub NDIlib_framesync_create: ::std::option::Option<
        unsafe extern "C" fn(p_receiver: NDIlib_recv_instance_t) -> NDIlib_framesync_instance_t,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_87() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_87>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_87))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_87>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_87))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_87>())).framesync_create as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_87),
            "::",
            stringify!(framesync_create)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_87>())).NDIlib_framesync_create as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_87),
            "::",
            stringify!(NDIlib_framesync_create)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_88 {
    pub framesync_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_framesync_instance_t)>,
    pub NDIlib_framesync_destroy:
        ::std::option::Option<unsafe extern "C" fn(p_instance: NDIlib_framesync_instance_t)>,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_88() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_88>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_88))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_88>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_88))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_88>())).framesync_destroy as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_88),
            "::",
            stringify!(framesync_destroy)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_88>())).NDIlib_framesync_destroy
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_88),
            "::",
            stringify!(NDIlib_framesync_destroy)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_89 {
    pub framesync_capture_audio: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_framesync_instance_t,
            p_audio_data: *mut NDIlib_audio_frame_v2_t,
            sample_rate: ::std::os::raw::c_int,
            no_channels: ::std::os::raw::c_int,
            no_samples: ::std::os::raw::c_int,
        ),
    >,
    pub NDIlib_framesync_capture_audio: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_framesync_instance_t,
            p_audio_data: *mut NDIlib_audio_frame_v2_t,
            sample_rate: ::std::os::raw::c_int,
            no_channels: ::std::os::raw::c_int,
            no_samples: ::std::os::raw::c_int,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_89() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_89>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_89))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_89>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_89))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_89>())).framesync_capture_audio as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_89),
            "::",
            stringify!(framesync_capture_audio)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_89>())).NDIlib_framesync_capture_audio
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_89),
            "::",
            stringify!(NDIlib_framesync_capture_audio)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_90 {
    pub framesync_free_audio: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_framesync_instance_t,
            p_audio_data: *mut NDIlib_audio_frame_v2_t,
        ),
    >,
    pub NDIlib_framesync_free_audio: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_framesync_instance_t,
            p_audio_data: *mut NDIlib_audio_frame_v2_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_90() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_90>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_90))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_90>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_90))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_90>())).framesync_free_audio as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_90),
            "::",
            stringify!(framesync_free_audio)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_90>())).NDIlib_framesync_free_audio
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_90),
            "::",
            stringify!(NDIlib_framesync_free_audio)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_91 {
    pub framesync_capture_video: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_framesync_instance_t,
            p_video_data: *mut NDIlib_video_frame_v2_t,
            field_type: NDIlib_frame_format_type_e,
        ),
    >,
    pub NDIlib_framesync_capture_video: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_framesync_instance_t,
            p_video_data: *mut NDIlib_video_frame_v2_t,
            field_type: NDIlib_frame_format_type_e,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_91() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_91>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_91))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_91>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_91))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_91>())).framesync_capture_video as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_91),
            "::",
            stringify!(framesync_capture_video)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_91>())).NDIlib_framesync_capture_video
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_91),
            "::",
            stringify!(NDIlib_framesync_capture_video)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_92 {
    pub framesync_free_video: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_framesync_instance_t,
            p_video_data: *mut NDIlib_video_frame_v2_t,
        ),
    >,
    pub NDIlib_framesync_free_video: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_framesync_instance_t,
            p_video_data: *mut NDIlib_video_frame_v2_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_92() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_92>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_92))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_92>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_92))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_92>())).framesync_free_video as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_92),
            "::",
            stringify!(framesync_free_video)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_92>())).NDIlib_framesync_free_video
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_92),
            "::",
            stringify!(NDIlib_framesync_free_video)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_93 {
    pub util_send_send_audio_interleaved_32s: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_audio_data: *const NDIlib_audio_frame_interleaved_32s_t,
        ),
    >,
    pub NDIlib_util_send_send_audio_interleaved_32s: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_audio_data: *const NDIlib_audio_frame_interleaved_32s_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_93() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_93>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_93))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_93>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_93))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_93>()))
                .util_send_send_audio_interleaved_32s as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_93),
            "::",
            stringify!(util_send_send_audio_interleaved_32s)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_93>()))
                .NDIlib_util_send_send_audio_interleaved_32s as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_93),
            "::",
            stringify!(NDIlib_util_send_send_audio_interleaved_32s)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_94 {
    pub util_audio_to_interleaved_32s_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_src: *const NDIlib_audio_frame_v2_t,
            p_dst: *mut NDIlib_audio_frame_interleaved_32s_t,
        ),
    >,
    pub NDIlib_util_audio_to_interleaved_32s_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_src: *const NDIlib_audio_frame_v2_t,
            p_dst: *mut NDIlib_audio_frame_interleaved_32s_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_94() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_94>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_94))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_94>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_94))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_94>())).util_audio_to_interleaved_32s_v2
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_94),
            "::",
            stringify!(util_audio_to_interleaved_32s_v2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_94>()))
                .NDIlib_util_audio_to_interleaved_32s_v2 as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_94),
            "::",
            stringify!(NDIlib_util_audio_to_interleaved_32s_v2)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_95 {
    pub util_audio_from_interleaved_32s_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_src: *const NDIlib_audio_frame_interleaved_32s_t,
            p_dst: *mut NDIlib_audio_frame_v2_t,
        ),
    >,
    pub NDIlib_util_audio_from_interleaved_32s_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_src: *const NDIlib_audio_frame_interleaved_32s_t,
            p_dst: *mut NDIlib_audio_frame_v2_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_95() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_95>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_95))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_95>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_95))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_95>())).util_audio_from_interleaved_32s_v2
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_95),
            "::",
            stringify!(util_audio_from_interleaved_32s_v2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_95>()))
                .NDIlib_util_audio_from_interleaved_32s_v2 as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_95),
            "::",
            stringify!(NDIlib_util_audio_from_interleaved_32s_v2)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_96 {
    pub send_get_source_name: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_send_instance_t) -> *const NDIlib_source_t,
    >,
    pub NDIlib_send_get_source_name: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_send_instance_t) -> *const NDIlib_source_t,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_96() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_96>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_96))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_96>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_96))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_96>())).send_get_source_name as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_96),
            "::",
            stringify!(send_get_source_name)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_96>())).NDIlib_send_get_source_name
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_96),
            "::",
            stringify!(NDIlib_send_get_source_name)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_97 {
    pub send_send_audio_v3: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_audio_data: *const NDIlib_audio_frame_v3_t,
        ),
    >,
    pub NDIlib_send_send_audio_v3: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_send_instance_t,
            p_audio_data: *const NDIlib_audio_frame_v3_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_97() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_97>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_97))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_97>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_97))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_97>())).send_send_audio_v3 as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_97),
            "::",
            stringify!(send_send_audio_v3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_97>())).NDIlib_send_send_audio_v3
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_97),
            "::",
            stringify!(NDIlib_send_send_audio_v3)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_98 {
    pub util_V210_to_P216: ::std::option::Option<
        unsafe extern "C" fn(
            p_src_v210: *const NDIlib_video_frame_v2_t,
            p_dst_p216: *mut NDIlib_video_frame_v2_t,
        ),
    >,
    pub NDIlib_util_V210_to_P216: ::std::option::Option<
        unsafe extern "C" fn(
            p_src_v210: *const NDIlib_video_frame_v2_t,
            p_dst_p216: *mut NDIlib_video_frame_v2_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_98() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_98>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_98))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_98>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_98))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_98>())).util_V210_to_P216 as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_98),
            "::",
            stringify!(util_V210_to_P216)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_98>())).NDIlib_util_V210_to_P216
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_98),
            "::",
            stringify!(NDIlib_util_V210_to_P216)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_99 {
    pub util_P216_to_V210: ::std::option::Option<
        unsafe extern "C" fn(
            p_src_p216: *const NDIlib_video_frame_v2_t,
            p_dst_v210: *mut NDIlib_video_frame_v2_t,
        ),
    >,
    pub NDIlib_util_P216_to_V210: ::std::option::Option<
        unsafe extern "C" fn(
            p_src_p216: *const NDIlib_video_frame_v2_t,
            p_dst_v210: *mut NDIlib_video_frame_v2_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_99() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_99>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_99))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_99>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_99))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_99>())).util_P216_to_V210 as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_99),
            "::",
            stringify!(util_P216_to_V210)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_99>())).NDIlib_util_P216_to_V210
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_99),
            "::",
            stringify!(NDIlib_util_P216_to_V210)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_100 {
    pub routing_get_no_connections: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_routing_instance_t,
            timeout_in_ms: u32,
        ) -> ::std::os::raw::c_int,
    >,
    pub NDIlib_routing_get_no_connections: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_routing_instance_t,
            timeout_in_ms: u32,
        ) -> ::std::os::raw::c_int,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_100() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_100>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_100))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_100>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_100))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_100>())).routing_get_no_connections
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_100),
            "::",
            stringify!(routing_get_no_connections)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_100>())).NDIlib_routing_get_no_connections
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_100),
            "::",
            stringify!(NDIlib_routing_get_no_connections)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_101 {
    pub routing_get_source_name: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_routing_instance_t) -> *const NDIlib_source_t,
    >,
    pub NDIlib_routing_get_source_name: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_routing_instance_t) -> *const NDIlib_source_t,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_101() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_101>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_101))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_101>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_101))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_101>())).routing_get_source_name
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_101),
            "::",
            stringify!(routing_get_source_name)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_101>())).NDIlib_routing_get_source_name
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_101),
            "::",
            stringify!(NDIlib_routing_get_source_name)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_102 {
    pub recv_capture_v3: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_video_data: *mut NDIlib_video_frame_v2_t,
            p_audio_data: *mut NDIlib_audio_frame_v3_t,
            p_metadata: *mut NDIlib_metadata_frame_t,
            timeout_in_ms: u32,
        ) -> NDIlib_frame_type_e,
    >,
    pub NDIlib_recv_capture_v3: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_video_data: *mut NDIlib_video_frame_v2_t,
            p_audio_data: *mut NDIlib_audio_frame_v3_t,
            p_metadata: *mut NDIlib_metadata_frame_t,
            timeout_in_ms: u32,
        ) -> NDIlib_frame_type_e,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_102() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_102>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_102))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_102>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_102))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_102>())).recv_capture_v3 as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_102),
            "::",
            stringify!(recv_capture_v3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_102>())).NDIlib_recv_capture_v3 as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_102),
            "::",
            stringify!(NDIlib_recv_capture_v3)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_103 {
    pub recv_free_audio_v3: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_audio_data: *const NDIlib_audio_frame_v3_t,
        ),
    >,
    pub NDIlib_recv_free_audio_v3: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_recv_instance_t,
            p_audio_data: *const NDIlib_audio_frame_v3_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_103() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_103>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_103))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_103>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_103))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_103>())).recv_free_audio_v3 as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_103),
            "::",
            stringify!(recv_free_audio_v3)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_103>())).NDIlib_recv_free_audio_v3
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_103),
            "::",
            stringify!(NDIlib_recv_free_audio_v3)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_104 {
    pub framesync_capture_audio_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_framesync_instance_t,
            p_audio_data: *mut NDIlib_audio_frame_v3_t,
            sample_rate: ::std::os::raw::c_int,
            no_channels: ::std::os::raw::c_int,
            no_samples: ::std::os::raw::c_int,
        ),
    >,
    pub NDIlib_framesync_capture_audio_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_framesync_instance_t,
            p_audio_data: *mut NDIlib_audio_frame_v3_t,
            sample_rate: ::std::os::raw::c_int,
            no_channels: ::std::os::raw::c_int,
            no_samples: ::std::os::raw::c_int,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_104() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_104>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_104))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_104>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_104))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_104>())).framesync_capture_audio_v2
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_104),
            "::",
            stringify!(framesync_capture_audio_v2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_104>())).NDIlib_framesync_capture_audio_v2
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_104),
            "::",
            stringify!(NDIlib_framesync_capture_audio_v2)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_105 {
    pub framesync_free_audio_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_framesync_instance_t,
            p_audio_data: *mut NDIlib_audio_frame_v3_t,
        ),
    >,
    pub NDIlib_framesync_free_audio_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_framesync_instance_t,
            p_audio_data: *mut NDIlib_audio_frame_v3_t,
        ),
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_105() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_105>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_105))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_105>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_105))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_105>())).framesync_free_audio_v2
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_105),
            "::",
            stringify!(framesync_free_audio_v2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_105>())).NDIlib_framesync_free_audio_v2
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_105),
            "::",
            stringify!(NDIlib_framesync_free_audio_v2)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_106 {
    pub framesync_audio_queue_depth: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_framesync_instance_t) -> ::std::os::raw::c_int,
    >,
    pub NDIlib_framesync_audio_queue_depth: ::std::option::Option<
        unsafe extern "C" fn(p_instance: NDIlib_framesync_instance_t) -> ::std::os::raw::c_int,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_106() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_106>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_106))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_106>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_106))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_106>())).framesync_audio_queue_depth
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_106),
            "::",
            stringify!(framesync_audio_queue_depth)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_106>())).NDIlib_framesync_audio_queue_depth
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_106),
            "::",
            stringify!(NDIlib_framesync_audio_queue_depth)
        )
    );
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union NDIlib_v5__bindgen_ty_107 {
    pub recv_ptz_exposure_manual_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_framesync_instance_t,
            iris: f32,
            gain: f32,
            shutter_speed: f32,
        ) -> bool,
    >,
    pub NDIlib_recv_ptz_exposure_manual_v2: ::std::option::Option<
        unsafe extern "C" fn(
            p_instance: NDIlib_framesync_instance_t,
            iris: f32,
            gain: f32,
            shutter_speed: f32,
        ) -> bool,
    >,
}
#[test]
fn bindgen_test_layout_NDIlib_v5__bindgen_ty_107() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5__bindgen_ty_107>(),
        8usize,
        concat!("Size of: ", stringify!(NDIlib_v5__bindgen_ty_107))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5__bindgen_ty_107>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5__bindgen_ty_107))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_107>())).recv_ptz_exposure_manual_v2
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_107),
            "::",
            stringify!(recv_ptz_exposure_manual_v2)
        )
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<NDIlib_v5__bindgen_ty_107>())).NDIlib_recv_ptz_exposure_manual_v2
                as *const _ as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(NDIlib_v5__bindgen_ty_107),
            "::",
            stringify!(NDIlib_recv_ptz_exposure_manual_v2)
        )
    );
}
#[test]
fn bindgen_test_layout_NDIlib_v5() {
    assert_eq!(
        ::std::mem::size_of::<NDIlib_v5>(),
        856usize,
        concat!("Size of: ", stringify!(NDIlib_v5))
    );
    assert_eq!(
        ::std::mem::align_of::<NDIlib_v5>(),
        8usize,
        concat!("Alignment of ", stringify!(NDIlib_v5))
    );
}
pub type NDIlib_v4_5 = NDIlib_v5;
pub type NDIlib_v4 = NDIlib_v5;
pub type NDIlib_v3 = NDIlib_v5;
pub type NDIlib_v2 = NDIlib_v5;
extern "C" {
    pub fn NDIlib_v5_load() -> *const NDIlib_v5;
}
pub type __builtin_va_list = [__va_list_tag; 1usize];
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __va_list_tag {
    pub gp_offset: ::std::os::raw::c_uint,
    pub fp_offset: ::std::os::raw::c_uint,
    pub overflow_arg_area: *mut ::std::os::raw::c_void,
    pub reg_save_area: *mut ::std::os::raw::c_void,
}
#[test]
fn bindgen_test_layout___va_list_tag() {
    assert_eq!(
        ::std::mem::size_of::<__va_list_tag>(),
        24usize,
        concat!("Size of: ", stringify!(__va_list_tag))
    );
    assert_eq!(
        ::std::mem::align_of::<__va_list_tag>(),
        8usize,
        concat!("Alignment of ", stringify!(__va_list_tag))
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<__va_list_tag>())).gp_offset as *const _ as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(__va_list_tag),
            "::",
            stringify!(gp_offset)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<__va_list_tag>())).fp_offset as *const _ as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(__va_list_tag),
            "::",
            stringify!(fp_offset)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<__va_list_tag>())).overflow_arg_area as *const _ as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(__va_list_tag),
            "::",
            stringify!(overflow_arg_area)
        )
    );
    assert_eq!(
        unsafe { &(*(::std::ptr::null::<__va_list_tag>())).reg_save_area as *const _ as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(__va_list_tag),
            "::",
            stringify!(reg_save_area)
        )
    );
}
